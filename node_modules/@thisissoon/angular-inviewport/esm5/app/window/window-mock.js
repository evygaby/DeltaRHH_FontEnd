/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/** @type {?} */
export var WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER = {
    closed: null,
    defaultStatus: null,
    document: null,
    frameElement: null,
    frames: null,
    history: null,
    innerHeight: null,
    innerWidth: null,
    length: null,
    localStorage: null,
    location: null,
    name: null,
    navigator: null,
    opener: null,
    outerHeight: null,
    outerWidth: null,
    pageXOffset: null,
    pageYOffset: null,
    parent: null,
    screen: null,
    screenLeft: null,
    screenTop: null,
    screenX: null,
    screenY: null,
    sessionStorage: null,
    scrollX: null,
    scrollY: null,
    self: null,
    status: null,
    top: null,
    addEventListener: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    alert: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    atob: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    blur: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    btoa: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    clearInterval: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    clearTimeout: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    close: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    confirm: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    focus: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    getComputedStyle: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    getSelection: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    matchMedia: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    moveBy: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    moveTo: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    open: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    print: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    prompt: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    resizeBy: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    resizeTo: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    removeEventListener: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    scroll: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    scrollBy: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    scrollTo: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    setInterval: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    setTimeout: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    }),
    stop: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return null;
    })
};
/** @type {?} */
export var WINDOW_MOCK = tslib_1.__assign({}, WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER, { IntersectionObserver: (/**
     * @param {...?} args
     * @return {?}
     */
    function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.observe = (/**
         * @return {?}
         */
        function () { return null; });
        this.unobserve = (/**
         * @return {?}
         */
        function () { return null; });
    }), IntersectionObserverEntry: /** @class */ (function () {
        function IntersectionObserverEntryMock() {
        }
        return IntersectionObserverEntryMock;
    }()) });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LW1vY2suanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGhpc2lzc29vbi9hbmd1bGFyLWludmlld3BvcnQvIiwic291cmNlcyI6WyJhcHAvd2luZG93L3dpbmRvdy1tb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU0sS0FBTyx5Q0FBeUMsR0FBRztJQUN2RCxNQUFNLEVBQUUsSUFBSTtJQUNaLGFBQWEsRUFBRSxJQUFJO0lBQ25CLFFBQVEsRUFBRSxJQUFJO0lBQ2QsWUFBWSxFQUFFLElBQUk7SUFDbEIsTUFBTSxFQUFFLElBQUk7SUFDWixPQUFPLEVBQUUsSUFBSTtJQUNiLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLE1BQU0sRUFBRSxJQUFJO0lBQ1osWUFBWSxFQUFFLElBQUk7SUFDbEIsUUFBUSxFQUFFLElBQUk7SUFDZCxJQUFJLEVBQUUsSUFBSTtJQUNWLFNBQVMsRUFBRSxJQUFJO0lBQ2YsTUFBTSxFQUFFLElBQUk7SUFDWixXQUFXLEVBQUUsSUFBSTtJQUNqQixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsSUFBSTtJQUNqQixXQUFXLEVBQUUsSUFBSTtJQUNqQixNQUFNLEVBQUUsSUFBSTtJQUNaLE1BQU0sRUFBRSxJQUFJO0lBQ1osVUFBVSxFQUFFLElBQUk7SUFDaEIsU0FBUyxFQUFFLElBQUk7SUFDZixPQUFPLEVBQUUsSUFBSTtJQUNiLE9BQU8sRUFBRSxJQUFJO0lBQ2IsY0FBYyxFQUFFLElBQUk7SUFDcEIsT0FBTyxFQUFFLElBQUk7SUFDYixPQUFPLEVBQUUsSUFBSTtJQUNiLElBQUksRUFBRSxJQUFJO0lBQ1YsTUFBTSxFQUFFLElBQUk7SUFDWixHQUFHLEVBQUUsSUFBSTtJQUNULGdCQUFnQjs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDbkMsS0FBSzs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDeEIsSUFBSTs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDdkIsSUFBSTs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDdkIsSUFBSTs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDdkIsYUFBYTs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDaEMsWUFBWTs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDL0IsS0FBSzs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDeEIsT0FBTzs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElBQUk7SUFBSixDQUFJLENBQUE7SUFDMUIsS0FBSzs7OztJQUFFO1FBQUMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7UUFBSyxPQUFBLElB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NUMsb0JBQW9COzs7O0lBQUU7UUFBUyxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOztRQUNwQyxJQUFJLENBQUMsT0FBTzs7O1FBQUcsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUEsQ0FBQztRQUMxQixJQUFJLENBQUMsU0FBUzs7O1FBQUcsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUEsQ0FBQztJQUM5QixDQUFDLEdBQ0QseUJBQXlCO1FBQUU7UUFBcUMsQ0FBQztRQUFELG9DQUFDO0lBQUQsQ0FBQyxBQUF0QyxNQUM1QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBXSU5ET1dfTU9DS19XSVRIT1VUX0lOVEVSU0VDVElPTl9PQlNFUlZFUiA9IHtcbiAgY2xvc2VkOiBudWxsLFxuICBkZWZhdWx0U3RhdHVzOiBudWxsLFxuICBkb2N1bWVudDogbnVsbCxcbiAgZnJhbWVFbGVtZW50OiBudWxsLFxuICBmcmFtZXM6IG51bGwsXG4gIGhpc3Rvcnk6IG51bGwsXG4gIGlubmVySGVpZ2h0OiBudWxsLFxuICBpbm5lcldpZHRoOiBudWxsLFxuICBsZW5ndGg6IG51bGwsXG4gIGxvY2FsU3RvcmFnZTogbnVsbCxcbiAgbG9jYXRpb246IG51bGwsXG4gIG5hbWU6IG51bGwsXG4gIG5hdmlnYXRvcjogbnVsbCxcbiAgb3BlbmVyOiBudWxsLFxuICBvdXRlckhlaWdodDogbnVsbCxcbiAgb3V0ZXJXaWR0aDogbnVsbCxcbiAgcGFnZVhPZmZzZXQ6IG51bGwsXG4gIHBhZ2VZT2Zmc2V0OiBudWxsLFxuICBwYXJlbnQ6IG51bGwsXG4gIHNjcmVlbjogbnVsbCxcbiAgc2NyZWVuTGVmdDogbnVsbCxcbiAgc2NyZWVuVG9wOiBudWxsLFxuICBzY3JlZW5YOiBudWxsLFxuICBzY3JlZW5ZOiBudWxsLFxuICBzZXNzaW9uU3RvcmFnZTogbnVsbCxcbiAgc2Nyb2xsWDogbnVsbCxcbiAgc2Nyb2xsWTogbnVsbCxcbiAgc2VsZjogbnVsbCxcbiAgc3RhdHVzOiBudWxsLFxuICB0b3A6IG51bGwsXG4gIGFkZEV2ZW50TGlzdGVuZXI6ICguLi5hcmdzKSA9PiBudWxsLFxuICBhbGVydDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGF0b2I6ICguLi5hcmdzKSA9PiBudWxsLFxuICBibHVyOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgYnRvYTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGNsZWFySW50ZXJ2YWw6ICguLi5hcmdzKSA9PiBudWxsLFxuICBjbGVhclRpbWVvdXQ6ICguLi5hcmdzKSA9PiBudWxsLFxuICBjbG9zZTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGNvbmZpcm06ICguLi5hcmdzKSA9PiBudWxsLFxuICBmb2N1czogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGdldENvbXB1dGVkU3R5bGU6ICguLi5hcmdzKSA9PiBudWxsLFxuICBnZXRTZWxlY3Rpb246ICguLi5hcmdzKSA9PiBudWxsLFxuICBtYXRjaE1lZGlhOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgbW92ZUJ5OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgbW92ZVRvOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgb3BlbjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHByaW50OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgcHJvbXB0OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgcmVzaXplQnk6ICguLi5hcmdzKSA9PiBudWxsLFxuICByZXNpemVUbzogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXI6ICguLi5hcmdzKSA9PiBudWxsLFxuICBzY3JvbGw6ICguLi5hcmdzKSA9PiBudWxsLFxuICBzY3JvbGxCeTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHNjcm9sbFRvOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc2V0SW50ZXJ2YWw6ICguLi5hcmdzKSA9PiBudWxsLFxuICBzZXRUaW1lb3V0OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc3RvcDogKC4uLmFyZ3MpID0+IG51bGxcbn07XG5cbmV4cG9ydCBjb25zdCBXSU5ET1dfTU9DSyA9IHtcbiAgLi4uV0lORE9XX01PQ0tfV0lUSE9VVF9JTlRFUlNFQ1RJT05fT0JTRVJWRVIsXG4gIEludGVyc2VjdGlvbk9ic2VydmVyOiBmdW5jdGlvbiguLi5hcmdzKSB7XG4gICAgdGhpcy5vYnNlcnZlID0gKCkgPT4gbnVsbDtcbiAgICB0aGlzLnVub2JzZXJ2ZSA9ICgpID0+IG51bGw7XG4gIH0sXG4gIEludGVyc2VjdGlvbk9ic2VydmVyRW50cnk6IGNsYXNzIEludGVyc2VjdGlvbk9ic2VydmVyRW50cnlNb2NrIHt9XG59O1xuIl19