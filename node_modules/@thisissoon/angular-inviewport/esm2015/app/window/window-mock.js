/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export const WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER = {
    closed: null,
    defaultStatus: null,
    document: null,
    frameElement: null,
    frames: null,
    history: null,
    innerHeight: null,
    innerWidth: null,
    length: null,
    localStorage: null,
    location: null,
    name: null,
    navigator: null,
    opener: null,
    outerHeight: null,
    outerWidth: null,
    pageXOffset: null,
    pageYOffset: null,
    parent: null,
    screen: null,
    screenLeft: null,
    screenTop: null,
    screenX: null,
    screenY: null,
    sessionStorage: null,
    scrollX: null,
    scrollY: null,
    self: null,
    status: null,
    top: null,
    addEventListener: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    alert: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    atob: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    blur: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    btoa: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    clearInterval: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    clearTimeout: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    close: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    confirm: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    focus: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    getComputedStyle: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    getSelection: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    matchMedia: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    moveBy: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    moveTo: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    open: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    print: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    prompt: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    resizeBy: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    resizeTo: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    removeEventListener: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    scroll: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    scrollBy: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    scrollTo: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    setInterval: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    setTimeout: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null),
    stop: (/**
     * @param {...?} args
     * @return {?}
     */
    (...args) => null)
};
/** @type {?} */
export const WINDOW_MOCK = Object.assign({}, WINDOW_MOCK_WITHOUT_INTERSECTION_OBSERVER, { IntersectionObserver: (/**
     * @param {...?} args
     * @return {?}
     */
    function (...args) {
        this.observe = (/**
         * @return {?}
         */
        () => null);
        this.unobserve = (/**
         * @return {?}
         */
        () => null);
    }), IntersectionObserverEntry: class IntersectionObserverEntryMock {
    } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LW1vY2suanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGhpc2lzc29vbi9hbmd1bGFyLWludmlld3BvcnQvIiwic291cmNlcyI6WyJhcHAvd2luZG93L3dpbmRvdy1tb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTSxPQUFPLHlDQUF5QyxHQUFHO0lBQ3ZELE1BQU0sRUFBRSxJQUFJO0lBQ1osYUFBYSxFQUFFLElBQUk7SUFDbkIsUUFBUSxFQUFFLElBQUk7SUFDZCxZQUFZLEVBQUUsSUFBSTtJQUNsQixNQUFNLEVBQUUsSUFBSTtJQUNaLE9BQU8sRUFBRSxJQUFJO0lBQ2IsV0FBVyxFQUFFLElBQUk7SUFDakIsVUFBVSxFQUFFLElBQUk7SUFDaEIsTUFBTSxFQUFFLElBQUk7SUFDWixZQUFZLEVBQUUsSUFBSTtJQUNsQixRQUFRLEVBQUUsSUFBSTtJQUNkLElBQUksRUFBRSxJQUFJO0lBQ1YsU0FBUyxFQUFFLElBQUk7SUFDZixNQUFNLEVBQUUsSUFBSTtJQUNaLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLE1BQU0sRUFBRSxJQUFJO0lBQ1osTUFBTSxFQUFFLElBQUk7SUFDWixVQUFVLEVBQUUsSUFBSTtJQUNoQixTQUFTLEVBQUUsSUFBSTtJQUNmLE9BQU8sRUFBRSxJQUFJO0lBQ2IsT0FBTyxFQUFFLElBQUk7SUFDYixjQUFjLEVBQUUsSUFBSTtJQUNwQixPQUFPLEVBQUUsSUFBSTtJQUNiLE9BQU8sRUFBRSxJQUFJO0lBQ2IsSUFBSSxFQUFFLElBQUk7SUFDVixNQUFNLEVBQUUsSUFBSTtJQUNaLEdBQUcsRUFBRSxJQUFJO0lBQ1QsZ0JBQWdCOzs7O0lBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFBO0lBQ25DLEtBQUs7Ozs7SUFBRSxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUs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SU9OX09CU0VSVkVSID0ge1xuICBjbG9zZWQ6IG51bGwsXG4gIGRlZmF1bHRTdGF0dXM6IG51bGwsXG4gIGRvY3VtZW50OiBudWxsLFxuICBmcmFtZUVsZW1lbnQ6IG51bGwsXG4gIGZyYW1lczogbnVsbCxcbiAgaGlzdG9yeTogbnVsbCxcbiAgaW5uZXJIZWlnaHQ6IG51bGwsXG4gIGlubmVyV2lkdGg6IG51bGwsXG4gIGxlbmd0aDogbnVsbCxcbiAgbG9jYWxTdG9yYWdlOiBudWxsLFxuICBsb2NhdGlvbjogbnVsbCxcbiAgbmFtZTogbnVsbCxcbiAgbmF2aWdhdG9yOiBudWxsLFxuICBvcGVuZXI6IG51bGwsXG4gIG91dGVySGVpZ2h0OiBudWxsLFxuICBvdXRlcldpZHRoOiBudWxsLFxuICBwYWdlWE9mZnNldDogbnVsbCxcbiAgcGFnZVlPZmZzZXQ6IG51bGwsXG4gIHBhcmVudDogbnVsbCxcbiAgc2NyZWVuOiBudWxsLFxuICBzY3JlZW5MZWZ0OiBudWxsLFxuICBzY3JlZW5Ub3A6IG51bGwsXG4gIHNjcmVlblg6IG51bGwsXG4gIHNjcmVlblk6IG51bGwsXG4gIHNlc3Npb25TdG9yYWdlOiBudWxsLFxuICBzY3JvbGxYOiBudWxsLFxuICBzY3JvbGxZOiBudWxsLFxuICBzZWxmOiBudWxsLFxuICBzdGF0dXM6IG51bGwsXG4gIHRvcDogbnVsbCxcbiAgYWRkRXZlbnRMaXN0ZW5lcjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGFsZXJ0OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgYXRvYjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGJsdXI6ICguLi5hcmdzKSA9PiBudWxsLFxuICBidG9hOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgY2xlYXJJbnRlcnZhbDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGNsZWFyVGltZW91dDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGNsb3NlOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgY29uZmlybTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGZvY3VzOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgZ2V0Q29tcHV0ZWRTdHlsZTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIGdldFNlbGVjdGlvbjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIG1hdGNoTWVkaWE6ICguLi5hcmdzKSA9PiBudWxsLFxuICBtb3ZlQnk6ICguLi5hcmdzKSA9PiBudWxsLFxuICBtb3ZlVG86ICguLi5hcmdzKSA9PiBudWxsLFxuICBvcGVuOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgcHJpbnQ6ICguLi5hcmdzKSA9PiBudWxsLFxuICBwcm9tcHQ6ICguLi5hcmdzKSA9PiBudWxsLFxuICByZXNpemVCeTogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHJlc2l6ZVRvOiAoLi4uYXJncykgPT4gbnVsbCxcbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHNjcm9sbDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHNjcm9sbEJ5OiAoLi4uYXJncykgPT4gbnVsbCxcbiAgc2Nyb2xsVG86ICguLi5hcmdzKSA9PiBudWxsLFxuICBzZXRJbnRlcnZhbDogKC4uLmFyZ3MpID0+IG51bGwsXG4gIHNldFRpbWVvdXQ6ICguLi5hcmdzKSA9PiBudWxsLFxuICBzdG9wOiAoLi4uYXJncykgPT4gbnVsbFxufTtcblxuZXhwb3J0IGNvbnN0IFdJTkRPV19NT0NLID0ge1xuICAuLi5XSU5ET1dfTU9DS19XSVRIT1VUX0lOVEVSU0VDVElPTl9PQlNFUlZFUixcbiAgSW50ZXJzZWN0aW9uT2JzZXJ2ZXI6IGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICB0aGlzLm9ic2VydmUgPSAoKSA9PiBudWxsO1xuICAgIHRoaXMudW5vYnNlcnZlID0gKCkgPT4gbnVsbDtcbiAgfSxcbiAgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeTogY2xhc3MgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJFbnRyeU1vY2sge31cbn07XG4iXX0=