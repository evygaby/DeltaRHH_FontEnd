{"version":3,"file":"scroll-spy.service.d.ts","sources":["scroll-spy.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList } from '@angular/core';\nimport { ScrollSpyItemDirective } from '../scroll-spy-item/scroll-spy-item.directive';\nimport { Spy } from '../shared/spy.model';\n/**\n * Service that stores a list of `Spy`'s and the state\n * of their nav items `inViewport` and `active` state\n *\n */\nexport declare class ScrollSpyService {\n    /**\n     * List of `Spy`'s\n     *\n     * @memberof ScrollSpyService\n     */\n    spys: Spy[];\n    /**\n     * Stores requests to add items to spy when spy hasn't been created\n     * yet. Once spy has been added then request will be made again.\n     *\n     * @memberof ScrollSpyService\n     */\n    buffer: any[];\n    /**\n     * Add spy to list of `spys`\n     *\n     * @memberof ScrollSpyService\n     */\n    addSpy(id: string, items: QueryList<ScrollSpyItemDirective>): void;\n    /**\n     * Remove spy from list of `spys`\n     *\n     * @memberof ScrollSpyService\n     */\n    removeSpy(id: string): void;\n    /**\n     * Set the `inViewport` status for a spy item then sets the active\n     * to true for the first item in the list that has `inViewport`\n     * set to true\n     *\n     * @memberof ScrollSpyService\n     */\n    setSpySectionStatus(sectionId: string, spyId: string, inViewport: boolean): void;\n}\n"]}