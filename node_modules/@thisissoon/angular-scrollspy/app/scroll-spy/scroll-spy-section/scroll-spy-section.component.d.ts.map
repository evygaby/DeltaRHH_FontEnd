{"version":3,"file":"scroll-spy-section.component.d.ts","sources":["scroll-spy-section.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ScrollSpyService } from '../scroll-spy-service/scroll-spy.service';\n/**\n * A component to wrap section content within that will update the\n * `ScrollSpyService` when it's in view\n *\n * @example\n * ```html\n *  <sn-scroll-spy-section id=\"section1\" for=\"foo\">\n *    ...\n *  </sn-scroll-spy-section>\n * ```\n */\nexport declare class ScrollSpySectionComponent {\n    private scrollSpySvc;\n    /**\n     * Identifies the section\n     *\n     * @memberof ScrollSpySectionComponent\n     */\n    id: string;\n    /**\n     * Specifies which `ScrollSpy` instance to update\n     *\n     * @memberof ScrollSpySectionComponent\n     */\n    for: string;\n    /**\n     * Creates an instance of ScrollSpySectionComponent.\n     * @memberof ScrollSpySectionComponent\n     */\n    constructor(scrollSpySvc: ScrollSpyService);\n    /**\n     * Updates `ScrollSpy` section when element enters/leaves viewport\n     *\n     * @memberof ScrollSpySectionComponent\n     */\n    onInViewportChange(inViewport: boolean): void;\n}\n"]}