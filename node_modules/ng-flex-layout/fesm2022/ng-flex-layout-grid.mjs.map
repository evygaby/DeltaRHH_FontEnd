{"version":3,"file":"ng-flex-layout-grid.mjs","sources":["../../../../projects/libs/flex-layout/grid/grid-align/grid-align.ts","../../../../projects/libs/flex-layout/grid/align-columns/align-columns.ts","../../../../projects/libs/flex-layout/grid/align-rows/align-rows.ts","../../../../projects/libs/flex-layout/grid/area/area.ts","../../../../projects/libs/flex-layout/grid/areas/areas.ts","../../../../projects/libs/flex-layout/grid/auto/auto.ts","../../../../projects/libs/flex-layout/grid/column/column.ts","../../../../projects/libs/flex-layout/grid/columns/columns.ts","../../../../projects/libs/flex-layout/grid/gap/gap.ts","../../../../projects/libs/flex-layout/grid/row/row.ts","../../../../projects/libs/flex-layout/grid/rows/rows.ts","../../../../projects/libs/flex-layout/grid/module.ts","../../../../projects/libs/flex-layout/grid/public-api.ts","../../../../projects/libs/flex-layout/grid/ng-flex-layout-grid.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable } from '@angular/core';\nimport {\n    MediaMarshaller,\n    BaseDirective2,\n    StyleBuilder,\n    StyleDefinition,\n    StyleUtils,\n} from 'ng-flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({ providedIn: 'root' })\nexport class GridAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input: string) {\n        return buildCss(input || ROW_DEFAULT);\n    }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n    protected override DIRECTIVE_KEY = 'grid-align';\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridAlignStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    protected override styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdGridAlign',\n    'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n    'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n    'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({ selector, inputs })\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n    protected override inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n    const css: { [key: string]: string } = {}, [rowAxis, columnAxis] = align.split(' ');\n\n    // Row axis\n    switch (rowAxis) {\n        case 'end':\n            css['justify-self'] = 'end';\n            break;\n        case 'center':\n            css['justify-self'] = 'center';\n            break;\n        case 'stretch':\n            css['justify-self'] = 'stretch';\n            break;\n        case 'start':\n            css['justify-self'] = 'start';\n            break;\n        default:\n            css['justify-self'] = ROW_DEFAULT;  // default row axis\n            break;\n    }\n\n    // Column axis\n    switch (columnAxis) {\n        case 'end':\n            css['align-self'] = 'end';\n            break;\n        case 'center':\n            css['align-self'] = 'center';\n            break;\n        case 'stretch':\n            css['align-self'] = 'stretch';\n            break;\n        case 'start':\n            css['align-self'] = 'start';\n            break;\n        default:\n            css['align-self'] = COL_DEFAULT;  // default column axis\n            break;\n    }\n\n    return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    StyleBuilder,\n    StyleDefinition,\n    MediaMarshaller,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridAlignColumnsParent) {\n        return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n    protected override DIRECTIVE_KEY = 'grid-align-columns';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridAlignColumnsStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdAlignColumns',\n    'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n    'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n    'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n    'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n    'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n    protected override inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n    const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n            css['align-content'] = 'center';\n            break;\n        case 'space-around':\n            css['align-content'] = 'space-around';\n            break;\n        case 'space-between':\n            css['align-content'] = 'space-between';\n            break;\n        case 'space-evenly':\n            css['align-content'] = 'space-evenly';\n            break;\n        case 'end':\n            css['align-content'] = 'end';\n            break;\n        case 'start':\n            css['align-content'] = 'start';\n            break;\n        case 'stretch':\n            css['align-content'] = 'stretch';\n            break;\n        default:\n            css['align-content'] = DEFAULT_MAIN;  // default main axis\n            break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n            css['align-items'] = 'start';\n            break;\n        case 'center':\n            css['align-items'] = 'center';\n            break;\n        case 'end':\n            css['align-items'] = 'end';\n            break;\n        case 'stretch':\n            css['align-items'] = 'stretch';\n            break;\n        default : // 'stretch'\n            css['align-items'] = DEFAULT_CROSS;   // default cross axis\n            break;\n    }\n\n    css['display'] = inline ? 'inline-grid' : 'grid';\n\n    return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    StyleBuilder,\n    StyleDefinition,\n    MediaMarshaller,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridAlignRowsParent) {\n        return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n    protected override DIRECTIVE_KEY = 'grid-align-rows';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridAlignRowsStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdAlignRows',\n    'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n    'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n    'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n    'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n    'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n    protected override inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n    const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n        case 'space-around':\n        case 'space-between':\n        case 'space-evenly':\n        case 'end':\n        case 'start':\n        case 'stretch':\n            css['justify-content'] = mainAxis;\n            break;\n        default:\n            css['justify-content'] = DEFAULT_MAIN;  // default main axis\n            break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n        case 'center':\n        case 'end':\n        case 'stretch':\n            css['justify-items'] = crossAxis;\n            break;\n        default : // 'stretch'\n            css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n            break;\n    }\n\n    css['display'] = inline ? 'inline-grid' : 'grid';\n\n    return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    MediaMarshaller,\n    StyleBuilder,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n    buildStyles(input: string) {\n        return {'grid-area': input || DEFAULT_VALUE};\n    }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n    protected override DIRECTIVE_KEY = 'grid-area';\n\n    constructor(elRef: ElementRef,\n        styleUtils: StyleUtils,\n        styleBuilder: GridAreaStyleBuilder,\n        marshal: MediaMarshaller) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.init();\n    }\n\n    protected override styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdArea',\n    'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n    'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n    'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    StyleBuilder,\n    MediaMarshaller,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n    buildStyles(input: string, parent: GridAreasParent) {\n        const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' ')\n        };\n    }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n    protected override DIRECTIVE_KEY = 'grid-areas';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elRef: ElementRef,\n        styleUtils: StyleUtils,\n        styleBuilder: GridAreasStyleBuiler,\n        marshal: MediaMarshaller) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? areasInlineCache : areasCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdAreas',\n    'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n    'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n    'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    StyleBuilder,\n    MediaMarshaller,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridAutoParent) {\n        let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n        if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n            direction = 'row';\n        }\n\n        dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense\n        };\n    }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    protected override DIRECTIVE_KEY = 'grid-auto';\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridAutoStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? autoInlineCache : autoCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdAuto',\n    'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n    'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n    'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    MediaMarshaller,\n    StyleBuilder,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n    buildStyles(input: string) {\n        return {'grid-column': input || DEFAULT_VALUE};\n    }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n    protected override DIRECTIVE_KEY = 'grid-column';\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridColumnStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    protected override styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdColumn',\n    'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n    'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n    'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n    MediaMarshaller,\n    BaseDirective2,\n    StyleBuilder,\n    StyleDefinition,\n    StyleUtils,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridColumnsParent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n        css[key] = input;\n\n        return css;\n    }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n    protected override DIRECTIVE_KEY = 'grid-columns';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridColumnsStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdColumns',\n    'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n    'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n    'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Input, Injectable } from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    MediaMarshaller,\n    StyleBuilder,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n    inline: boolean\n}\n\n@Injectable({ providedIn: 'root' })\nexport class GridGapStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridGapParent) {\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-gap': input || DEFAULT_VALUE\n        };\n    }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n    protected override DIRECTIVE_KEY = 'grid-gap';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elRef: ElementRef,\n        styleUtils: StyleUtils,\n        styleBuilder: GridGapStyleBuilder,\n        marshal: MediaMarshaller) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? gapInlineCache : gapCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdGap',\n    'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n    'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n    'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({ selector, inputs })\nexport class DefaultGridGapDirective extends GridGapDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n    BaseDirective2,\n    StyleUtils,\n    MediaMarshaller,\n    StyleBuilder,\n    StyleDefinition,\n} from 'ng-flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n    buildStyles(input: string) {\n        return {'grid-row': input || DEFAULT_VALUE};\n    }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n    protected override DIRECTIVE_KEY = 'grid-row';\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridRowStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    protected override styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdRow',\n    'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n    'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n    'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n    MediaMarshaller,\n    BaseDirective2,\n    StyleBuilder,\n    StyleDefinition,\n    StyleUtils,\n} from 'ng-flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n    inline: boolean\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input: string, parent: GridRowsParent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n        css[key] = input;\n\n        return css;\n    }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n    protected override DIRECTIVE_KEY = 'grid-rows';\n\n    @Input('gdInline')\n    get inline(): boolean {\n        return this._inline;\n    }\n    set inline(val: boolean) {\n        this._inline = coerceBooleanProperty(val);\n    }\n    protected _inline = false;\n\n    constructor(elementRef: ElementRef,\n        styleBuilder: GridRowsStyleBuilder,\n        styler: StyleUtils,\n        marshal: MediaMarshaller) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.init();\n    }\n\n    // *********************************************\n    // Protected methods\n    // *********************************************\n\n    protected override updateWithValue(value: string) {\n        this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n        this.addStyles(value, {inline: this.inline});\n    }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n    'gdRows',\n    'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n    'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n    'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n    protected override inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'ng-flex-layout/core';\n\nimport { DefaultGridAlignDirective } from './grid-align/grid-align';\nimport { DefaultGridAlignColumnsDirective } from './align-columns/align-columns';\nimport { DefaultGridAlignRowsDirective } from './align-rows/align-rows';\nimport { DefaultGridAreaDirective } from './area/area';\nimport { DefaultGridAreasDirective } from './areas/areas';\nimport { DefaultGridAutoDirective } from './auto/auto';\nimport { DefaultGridColumnDirective } from './column/column';\nimport { DefaultGridColumnsDirective } from './columns/columns';\nimport { DefaultGridGapDirective } from './gap/gap';\nimport { DefaultGridRowDirective } from './row/row';\nimport { DefaultGridRowsDirective } from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n    DefaultGridAlignDirective,\n    DefaultGridAlignColumnsDirective,\n    DefaultGridAlignRowsDirective,\n    DefaultGridAreaDirective,\n    DefaultGridAreasDirective,\n    DefaultGridAutoDirective,\n    DefaultGridColumnDirective,\n    DefaultGridColumnsDirective,\n    DefaultGridGapDirective,\n    DefaultGridRowDirective,\n    DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n    imports: [CoreModule, ...ALL_DIRECTIVES],\n    declarations: [],\n    exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './module';\n\nexport * from './align-columns/align-columns';\nexport * from './align-rows/align-rows';\nexport * from './area/area';\nexport * from './areas/areas';\nexport * from './auto/auto';\nexport * from './column/column';\nexport * from './columns/columns';\nexport * from './gap/gap';\nexport * from './grid-align/grid-align';\nexport * from './row/row';\nexport * from './rows/rows';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["buildCss","inputs","selector","DEFAULT_MAIN","DEFAULT_CROSS","DEFAULT_VALUE","AUTO_SPECIFIER"],"mappings":"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"}