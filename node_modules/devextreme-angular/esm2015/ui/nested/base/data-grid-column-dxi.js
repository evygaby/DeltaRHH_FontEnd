/*!
 * devextreme-angular
 * Version: 23.1.13
 * Build date: Mon Oct 28 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { CollectionNestedOption } from 'devextreme-angular/core';
import { Component, } from '@angular/core';
import * as i0 from "@angular/core";
export class DxiDataGridColumn extends CollectionNestedOption {
    get alignment() {
        return this._getOption('alignment');
    }
    set alignment(value) {
        this._setOption('alignment', value);
    }
    get allowEditing() {
        return this._getOption('allowEditing');
    }
    set allowEditing(value) {
        this._setOption('allowEditing', value);
    }
    get allowExporting() {
        return this._getOption('allowExporting');
    }
    set allowExporting(value) {
        this._setOption('allowExporting', value);
    }
    get allowFiltering() {
        return this._getOption('allowFiltering');
    }
    set allowFiltering(value) {
        this._setOption('allowFiltering', value);
    }
    get allowFixing() {
        return this._getOption('allowFixing');
    }
    set allowFixing(value) {
        this._setOption('allowFixing', value);
    }
    get allowGrouping() {
        return this._getOption('allowGrouping');
    }
    set allowGrouping(value) {
        this._setOption('allowGrouping', value);
    }
    get allowHeaderFiltering() {
        return this._getOption('allowHeaderFiltering');
    }
    set allowHeaderFiltering(value) {
        this._setOption('allowHeaderFiltering', value);
    }
    get allowHiding() {
        return this._getOption('allowHiding');
    }
    set allowHiding(value) {
        this._setOption('allowHiding', value);
    }
    get allowReordering() {
        return this._getOption('allowReordering');
    }
    set allowReordering(value) {
        this._setOption('allowReordering', value);
    }
    get allowResizing() {
        return this._getOption('allowResizing');
    }
    set allowResizing(value) {
        this._setOption('allowResizing', value);
    }
    get allowSearch() {
        return this._getOption('allowSearch');
    }
    set allowSearch(value) {
        this._setOption('allowSearch', value);
    }
    get allowSorting() {
        return this._getOption('allowSorting');
    }
    set allowSorting(value) {
        this._setOption('allowSorting', value);
    }
    get autoExpandGroup() {
        return this._getOption('autoExpandGroup');
    }
    set autoExpandGroup(value) {
        this._setOption('autoExpandGroup', value);
    }
    get buttons() {
        return this._getOption('buttons');
    }
    set buttons(value) {
        this._setOption('buttons', value);
    }
    get calculateCellValue() {
        return this._getOption('calculateCellValue');
    }
    set calculateCellValue(value) {
        this._setOption('calculateCellValue', value);
    }
    get calculateDisplayValue() {
        return this._getOption('calculateDisplayValue');
    }
    set calculateDisplayValue(value) {
        this._setOption('calculateDisplayValue', value);
    }
    get calculateFilterExpression() {
        return this._getOption('calculateFilterExpression');
    }
    set calculateFilterExpression(value) {
        this._setOption('calculateFilterExpression', value);
    }
    get calculateGroupValue() {
        return this._getOption('calculateGroupValue');
    }
    set calculateGroupValue(value) {
        this._setOption('calculateGroupValue', value);
    }
    get calculateSortValue() {
        return this._getOption('calculateSortValue');
    }
    set calculateSortValue(value) {
        this._setOption('calculateSortValue', value);
    }
    get caption() {
        return this._getOption('caption');
    }
    set caption(value) {
        this._setOption('caption', value);
    }
    get cellTemplate() {
        return this._getOption('cellTemplate');
    }
    set cellTemplate(value) {
        this._setOption('cellTemplate', value);
    }
    get columns() {
        return this._getOption('columns');
    }
    set columns(value) {
        this._setOption('columns', value);
    }
    get cssClass() {
        return this._getOption('cssClass');
    }
    set cssClass(value) {
        this._setOption('cssClass', value);
    }
    get customizeText() {
        return this._getOption('customizeText');
    }
    set customizeText(value) {
        this._setOption('customizeText', value);
    }
    get dataField() {
        return this._getOption('dataField');
    }
    set dataField(value) {
        this._setOption('dataField', value);
    }
    get dataType() {
        return this._getOption('dataType');
    }
    set dataType(value) {
        this._setOption('dataType', value);
    }
    get editCellTemplate() {
        return this._getOption('editCellTemplate');
    }
    set editCellTemplate(value) {
        this._setOption('editCellTemplate', value);
    }
    get editorOptions() {
        return this._getOption('editorOptions');
    }
    set editorOptions(value) {
        this._setOption('editorOptions', value);
    }
    get encodeHtml() {
        return this._getOption('encodeHtml');
    }
    set encodeHtml(value) {
        this._setOption('encodeHtml', value);
    }
    get falseText() {
        return this._getOption('falseText');
    }
    set falseText(value) {
        this._setOption('falseText', value);
    }
    get filterOperations() {
        return this._getOption('filterOperations');
    }
    set filterOperations(value) {
        this._setOption('filterOperations', value);
    }
    get filterType() {
        return this._getOption('filterType');
    }
    set filterType(value) {
        this._setOption('filterType', value);
    }
    get filterValue() {
        return this._getOption('filterValue');
    }
    set filterValue(value) {
        this._setOption('filterValue', value);
    }
    get filterValues() {
        return this._getOption('filterValues');
    }
    set filterValues(value) {
        this._setOption('filterValues', value);
    }
    get fixed() {
        return this._getOption('fixed');
    }
    set fixed(value) {
        this._setOption('fixed', value);
    }
    get fixedPosition() {
        return this._getOption('fixedPosition');
    }
    set fixedPosition(value) {
        this._setOption('fixedPosition', value);
    }
    get format() {
        return this._getOption('format');
    }
    set format(value) {
        this._setOption('format', value);
    }
    get formItem() {
        return this._getOption('formItem');
    }
    set formItem(value) {
        this._setOption('formItem', value);
    }
    get groupCellTemplate() {
        return this._getOption('groupCellTemplate');
    }
    set groupCellTemplate(value) {
        this._setOption('groupCellTemplate', value);
    }
    get groupIndex() {
        return this._getOption('groupIndex');
    }
    set groupIndex(value) {
        this._setOption('groupIndex', value);
    }
    get headerCellTemplate() {
        return this._getOption('headerCellTemplate');
    }
    set headerCellTemplate(value) {
        this._setOption('headerCellTemplate', value);
    }
    get headerFilter() {
        return this._getOption('headerFilter');
    }
    set headerFilter(value) {
        this._setOption('headerFilter', value);
    }
    get hidingPriority() {
        return this._getOption('hidingPriority');
    }
    set hidingPriority(value) {
        this._setOption('hidingPriority', value);
    }
    get isBand() {
        return this._getOption('isBand');
    }
    set isBand(value) {
        this._setOption('isBand', value);
    }
    get lookup() {
        return this._getOption('lookup');
    }
    set lookup(value) {
        this._setOption('lookup', value);
    }
    get minWidth() {
        return this._getOption('minWidth');
    }
    set minWidth(value) {
        this._setOption('minWidth', value);
    }
    get name() {
        return this._getOption('name');
    }
    set name(value) {
        this._setOption('name', value);
    }
    get ownerBand() {
        return this._getOption('ownerBand');
    }
    set ownerBand(value) {
        this._setOption('ownerBand', value);
    }
    get renderAsync() {
        return this._getOption('renderAsync');
    }
    set renderAsync(value) {
        this._setOption('renderAsync', value);
    }
    get selectedFilterOperation() {
        return this._getOption('selectedFilterOperation');
    }
    set selectedFilterOperation(value) {
        this._setOption('selectedFilterOperation', value);
    }
    get setCellValue() {
        return this._getOption('setCellValue');
    }
    set setCellValue(value) {
        this._setOption('setCellValue', value);
    }
    get showEditorAlways() {
        return this._getOption('showEditorAlways');
    }
    set showEditorAlways(value) {
        this._setOption('showEditorAlways', value);
    }
    get showInColumnChooser() {
        return this._getOption('showInColumnChooser');
    }
    set showInColumnChooser(value) {
        this._setOption('showInColumnChooser', value);
    }
    get showWhenGrouped() {
        return this._getOption('showWhenGrouped');
    }
    set showWhenGrouped(value) {
        this._setOption('showWhenGrouped', value);
    }
    get sortIndex() {
        return this._getOption('sortIndex');
    }
    set sortIndex(value) {
        this._setOption('sortIndex', value);
    }
    get sortingMethod() {
        return this._getOption('sortingMethod');
    }
    set sortingMethod(value) {
        this._setOption('sortingMethod', value);
    }
    get sortOrder() {
        return this._getOption('sortOrder');
    }
    set sortOrder(value) {
        this._setOption('sortOrder', value);
    }
    get trueText() {
        return this._getOption('trueText');
    }
    set trueText(value) {
        this._setOption('trueText', value);
    }
    get type() {
        return this._getOption('type');
    }
    set type(value) {
        this._setOption('type', value);
    }
    get validationRules() {
        return this._getOption('validationRules');
    }
    set validationRules(value) {
        this._setOption('validationRules', value);
    }
    get visible() {
        return this._getOption('visible');
    }
    set visible(value) {
        this._setOption('visible', value);
    }
    get visibleIndex() {
        return this._getOption('visibleIndex');
    }
    set visibleIndex(value) {
        this._setOption('visibleIndex', value);
    }
    get width() {
        return this._getOption('width');
    }
    set width(value) {
        this._setOption('width', value);
    }
}
/** @nocollapse */ DxiDataGridColumn.ɵfac = /** @pureOrBreakMyCode */ function () { let ɵDxiDataGridColumn_BaseFactory; return function DxiDataGridColumn_Factory(t) { return (ɵDxiDataGridColumn_BaseFactory || (ɵDxiDataGridColumn_BaseFactory = i0.ɵɵgetInheritedFactory(DxiDataGridColumn)))(t || DxiDataGridColumn); }; }();
/** @nocollapse */ DxiDataGridColumn.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxiDataGridColumn, selectors: [["ng-component"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiDataGridColumn_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DxiDataGridColumn, [{
        type: Component,
        args: [{
                template: ''
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,