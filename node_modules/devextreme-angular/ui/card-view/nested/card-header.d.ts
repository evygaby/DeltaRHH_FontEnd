/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, ElementRef, Renderer2, AfterViewInit, QueryList, AfterContentInit } from '@angular/core';
import { CardHeaderItem, CardHeaderPredefinedItem } from 'devextreme/ui/card_view';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiCardViewCardHeaderItemComponent } from './card-header-item-dxi';
import { DxiCardViewItemComponent } from './item-dxi';
import * as i0 from "@angular/core";
export declare class DxoCardViewCardHeaderComponent extends NestedOption implements AfterViewInit, OnDestroy, OnInit, IDxTemplateHost, AfterContentInit {
    private renderer;
    private document;
    private element;
    get items(): Array<CardHeaderItem | CardHeaderPredefinedItem>;
    set items(value: Array<CardHeaderItem | CardHeaderPredefinedItem>);
    get template(): any;
    set template(value: any);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    cardHeaderItemsChildren: QueryList<DxiCardViewCardHeaderItemComponent>;
    itemsChildren: QueryList<DxiCardViewItemComponent>;
    setItems(): void;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCardViewCardHeaderComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoCardViewCardHeaderComponent, "dxo-card-view-card-header", never, { "items": { "alias": "items"; "required": false; }; "template": { "alias": "template"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, ["cardHeaderItemsChildren", "itemsChildren"], ["*"], true, never>;
}
export declare class DxoCardViewCardHeaderModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCardViewCardHeaderModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoCardViewCardHeaderModule, never, [typeof DxoCardViewCardHeaderComponent], [typeof DxoCardViewCardHeaderComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoCardViewCardHeaderModule>;
}
