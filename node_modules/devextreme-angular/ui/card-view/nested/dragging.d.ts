/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { DragHighlight } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoCardViewDraggingComponent extends NestedOption implements OnDestroy, OnInit {
    get dropFeedbackMode(): DragHighlight;
    set dropFeedbackMode(value: DragHighlight);
    get onDragChange(): ((e: any) => void);
    set onDragChange(value: ((e: any) => void));
    get onDragEnd(): ((e: any) => void);
    set onDragEnd(value: ((e: any) => void));
    get onDragMove(): ((e: any) => void);
    set onDragMove(value: ((e: any) => void));
    get onDragStart(): ((e: any) => void);
    set onDragStart(value: ((e: any) => void));
    get onRemove(): ((e: any) => void);
    set onRemove(value: ((e: any) => void));
    get onReorder(): ((e: any) => void);
    set onReorder(value: ((e: any) => void));
    get scrollSensitivity(): number;
    set scrollSensitivity(value: number);
    get scrollSpeed(): number;
    set scrollSpeed(value: number);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCardViewDraggingComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoCardViewDraggingComponent, "dxo-card-view-dragging", never, { "dropFeedbackMode": { "alias": "dropFeedbackMode"; "required": false; }; "onDragChange": { "alias": "onDragChange"; "required": false; }; "onDragEnd": { "alias": "onDragEnd"; "required": false; }; "onDragMove": { "alias": "onDragMove"; "required": false; }; "onDragStart": { "alias": "onDragStart"; "required": false; }; "onRemove": { "alias": "onRemove"; "required": false; }; "onReorder": { "alias": "onReorder"; "required": false; }; "scrollSensitivity": { "alias": "scrollSensitivity"; "required": false; }; "scrollSpeed": { "alias": "scrollSpeed"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DxoCardViewDraggingModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCardViewDraggingModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoCardViewDraggingModule, never, [typeof DxoCardViewDraggingComponent], [typeof DxoCardViewDraggingComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoCardViewDraggingModule>;
}
