/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, QueryList, AfterContentInit } from '@angular/core';
import { dxSchedulerToolbarItem, SchedulerPredefinedToolbarItem } from 'devextreme/ui/scheduler';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiSchedulerItemComponent } from './item-dxi';
import { DxiSchedulerToolbarItemComponent } from './toolbar-item-dxi';
import * as i0 from "@angular/core";
export declare class DxoSchedulerToolbarComponent extends NestedOption implements OnDestroy, OnInit, AfterContentInit {
    get disabled(): boolean;
    set disabled(value: boolean);
    get items(): Array<dxSchedulerToolbarItem | SchedulerPredefinedToolbarItem>;
    set items(value: Array<dxSchedulerToolbarItem | SchedulerPredefinedToolbarItem>);
    get multiline(): boolean;
    set multiline(value: boolean);
    get visible(): boolean | undefined;
    set visible(value: boolean | undefined);
    protected get _optionPath(): string;
    itemsChildren: QueryList<DxiSchedulerItemComponent>;
    toolbarItemsChildren: QueryList<DxiSchedulerToolbarItemComponent>;
    setItems(): void;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSchedulerToolbarComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoSchedulerToolbarComponent, "dxo-scheduler-toolbar", never, { "disabled": { "alias": "disabled"; "required": false; }; "items": { "alias": "items"; "required": false; }; "multiline": { "alias": "multiline"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, ["itemsChildren", "toolbarItemsChildren"], never, true, never>;
}
export declare class DxoSchedulerToolbarModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSchedulerToolbarModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoSchedulerToolbarModule, never, [typeof DxoSchedulerToolbarComponent], [typeof DxoSchedulerToolbarComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoSchedulerToolbarModule>;
}
