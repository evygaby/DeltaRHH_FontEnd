import { User } from 'devextreme/ui/chat';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiChatItemComponent extends CollectionNestedOption {
    get alt(): string;
    set alt(value: string);
    get author(): User;
    set author(value: User);
    get id(): number | string;
    set id(value: number | string);
    get isDeleted(): boolean;
    set isDeleted(value: boolean);
    get isEdited(): boolean;
    set isEdited(value: boolean);
    get src(): string;
    set src(value: string);
    get text(): string;
    set text(value: string);
    get timestamp(): Date | number | string;
    set timestamp(value: Date | number | string);
    get type(): string | undefined;
    set type(value: string | undefined);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiChatItemComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiChatItemComponent, "dxi-chat-item", never, { "alt": { "alias": "alt"; "required": false; }; "author": { "alias": "author"; "required": false; }; "id": { "alias": "id"; "required": false; }; "isDeleted": { "alias": "isDeleted"; "required": false; }; "isEdited": { "alias": "isEdited"; "required": false; }; "src": { "alias": "src"; "required": false; }; "text": { "alias": "text"; "required": false; }; "timestamp": { "alias": "timestamp"; "required": false; }; "type": { "alias": "type"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DxiChatItemModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiChatItemModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiChatItemModule, never, [typeof DxiChatItemComponent], [typeof DxiChatItemComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiChatItemModule>;
}
