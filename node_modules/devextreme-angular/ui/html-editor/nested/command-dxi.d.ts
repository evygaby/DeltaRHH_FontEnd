import { AICommandNameExtended } from 'devextreme/ui/html_editor';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiHtmlEditorCommandComponent extends CollectionNestedOption {
    get name(): AICommandNameExtended;
    set name(value: AICommandNameExtended);
    get options(): any;
    set options(value: any);
    get prompt(): ((param: string) => string);
    set prompt(value: ((param: string) => string));
    get text(): string;
    set text(value: string);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiHtmlEditorCommandComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiHtmlEditorCommandComponent, "dxi-html-editor-command", never, { "name": { "alias": "name"; "required": false; }; "options": { "alias": "options"; "required": false; }; "prompt": { "alias": "prompt"; "required": false; }; "text": { "alias": "text"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class DxiHtmlEditorCommandModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiHtmlEditorCommandModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiHtmlEditorCommandModule, never, [typeof DxiHtmlEditorCommandComponent], [typeof DxiHtmlEditorCommandComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiHtmlEditorCommandModule>;
}
