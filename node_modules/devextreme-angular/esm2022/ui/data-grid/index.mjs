/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { TransferState, Component, NgModule, ElementRef, NgZone, PLATFORM_ID, Inject, Input, Output, EventEmitter, ContentChildren, QueryList } from '@angular/core';
import DxDataGrid from 'devextreme/ui/data_grid';
import { DxComponent, DxTemplateHost, DxIntegrationModule, DxTemplateModule, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';
import { DxoColumnChooserModule } from 'devextreme-angular/ui/nested';
import { DxoPositionModule } from 'devextreme-angular/ui/nested';
import { DxoAtModule } from 'devextreme-angular/ui/nested';
import { DxoBoundaryOffsetModule } from 'devextreme-angular/ui/nested';
import { DxoCollisionModule } from 'devextreme-angular/ui/nested';
import { DxoMyModule } from 'devextreme-angular/ui/nested';
import { DxoOffsetModule } from 'devextreme-angular/ui/nested';
import { DxoSearchModule } from 'devextreme-angular/ui/nested';
import { DxoSelectionModule } from 'devextreme-angular/ui/nested';
import { DxoColumnFixingModule } from 'devextreme-angular/ui/nested';
import { DxoIconsModule } from 'devextreme-angular/ui/nested';
import { DxoTextsModule } from 'devextreme-angular/ui/nested';
import { DxiColumnModule } from 'devextreme-angular/ui/nested';
import { DxiButtonModule } from 'devextreme-angular/ui/nested';
import { DxoLookupModule } from 'devextreme-angular/ui/nested';
import { DxoFormatModule } from 'devextreme-angular/ui/nested';
import { DxoFormItemModule } from 'devextreme-angular/ui/nested';
import { DxoLabelModule } from 'devextreme-angular/ui/nested';
import { DxiValidationRuleModule } from 'devextreme-angular/ui/nested';
import { DxoHeaderFilterModule } from 'devextreme-angular/ui/nested';
import { DxoEditingModule } from 'devextreme-angular/ui/nested';
import { DxiChangeModule } from 'devextreme-angular/ui/nested';
import { DxoFormModule } from 'devextreme-angular/ui/nested';
import { DxoColCountByScreenModule } from 'devextreme-angular/ui/nested';
import { DxiItemModule } from 'devextreme-angular/ui/nested';
import { DxoTabPanelOptionsModule } from 'devextreme-angular/ui/nested';
import { DxiTabModule } from 'devextreme-angular/ui/nested';
import { DxoButtonOptionsModule } from 'devextreme-angular/ui/nested';
import { DxoPopupModule } from 'devextreme-angular/ui/nested';
import { DxoAnimationModule } from 'devextreme-angular/ui/nested';
import { DxoHideModule } from 'devextreme-angular/ui/nested';
import { DxoFromModule } from 'devextreme-angular/ui/nested';
import { DxoToModule } from 'devextreme-angular/ui/nested';
import { DxoShowModule } from 'devextreme-angular/ui/nested';
import { DxoExportModule } from 'devextreme-angular/ui/nested';
import { DxoFilterBuilderModule } from 'devextreme-angular/ui/nested';
import { DxiCustomOperationModule } from 'devextreme-angular/ui/nested';
import { DxiFieldModule } from 'devextreme-angular/ui/nested';
import { DxoFilterOperationDescriptionsModule } from 'devextreme-angular/ui/nested';
import { DxoGroupOperationDescriptionsModule } from 'devextreme-angular/ui/nested';
import { DxoFilterBuilderPopupModule } from 'devextreme-angular/ui/nested';
import { DxoFilterPanelModule } from 'devextreme-angular/ui/nested';
import { DxoFilterRowModule } from 'devextreme-angular/ui/nested';
import { DxoOperationDescriptionsModule } from 'devextreme-angular/ui/nested';
import { DxoGroupingModule } from 'devextreme-angular/ui/nested';
import { DxoGroupPanelModule } from 'devextreme-angular/ui/nested';
import { DxoKeyboardNavigationModule } from 'devextreme-angular/ui/nested';
import { DxoLoadPanelModule } from 'devextreme-angular/ui/nested';
import { DxoMasterDetailModule } from 'devextreme-angular/ui/nested';
import { DxoPagerModule } from 'devextreme-angular/ui/nested';
import { DxoPagingModule } from 'devextreme-angular/ui/nested';
import { DxoRemoteOperationsModule } from 'devextreme-angular/ui/nested';
import { DxoRowDraggingModule } from 'devextreme-angular/ui/nested';
import { DxoCursorOffsetModule } from 'devextreme-angular/ui/nested';
import { DxoScrollingModule } from 'devextreme-angular/ui/nested';
import { DxoSearchPanelModule } from 'devextreme-angular/ui/nested';
import { DxiSortByGroupSummaryInfoModule } from 'devextreme-angular/ui/nested';
import { DxoSortingModule } from 'devextreme-angular/ui/nested';
import { DxoStateStoringModule } from 'devextreme-angular/ui/nested';
import { DxoSummaryModule } from 'devextreme-angular/ui/nested';
import { DxiGroupItemModule } from 'devextreme-angular/ui/nested';
import { DxoValueFormatModule } from 'devextreme-angular/ui/nested';
import { DxiTotalItemModule } from 'devextreme-angular/ui/nested';
import { DxoToolbarModule } from 'devextreme-angular/ui/nested';
import { DxoDataGridAnimationModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridAsyncRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridAtModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridBoundaryOffsetModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridButtonModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridChangeModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColCountByScreenModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridCollisionModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridColumnModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnChooserModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnChooserSearchModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnChooserSelectionModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnFixingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnFixingTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnHeaderFilterModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnHeaderFilterSearchModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridColumnLookupModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridCompareRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridCursorOffsetModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridCustomOperationModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridCustomRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridDataGridHeaderFilterModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridDataGridHeaderFilterSearchModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridDataGridHeaderFilterTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridDataGridSelectionModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridEditingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridEditingTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridEmailRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridExportModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridExportTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridFieldModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFieldLookupModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterBuilderModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterBuilderPopupModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterOperationDescriptionsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterPanelModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterPanelTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFilterRowModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFormModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFormatModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFormItemModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridFromModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridGroupingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridGroupingTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridGroupItemModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridGroupOperationDescriptionsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridGroupPanelModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridHeaderFilterModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridHideModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridIconsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridItemModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridKeyboardNavigationModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridLabelModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridLoadPanelModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridLookupModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridMasterDetailModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridMyModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridNumericRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridOffsetModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridOperationDescriptionsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridPagerModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridPagingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridPatternRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridPopupModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridPositionModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridRangeRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridRemoteOperationsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridRequiredRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridRowDraggingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridScrollingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSearchModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSearchPanelModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSelectionModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridShowModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridSortByGroupSummaryInfoModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSortingModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridStateStoringModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridStringLengthRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSummaryModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridSummaryTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridTextsModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridToModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridToolbarModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridToolbarItemModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridTotalItemModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridValidationRuleModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxoDataGridValueFormatModule } from 'devextreme-angular/ui/data-grid/nested';
import { DxiColumnComponent } from 'devextreme-angular/ui/nested';
import { DxiSortByGroupSummaryInfoComponent } from 'devextreme-angular/ui/nested';
import { DxiDataGridColumnComponent } from 'devextreme-angular/ui/data-grid/nested';
import { DxiDataGridSortByGroupSummaryInfoComponent } from 'devextreme-angular/ui/data-grid/nested';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
/**
 * The DataGrid is a UI component that represents data from a local or remote source in the form of a grid. This UI component offers such basic features as sorting, grouping, filtering, as well as more advanced capabilities, like state storing, client-side exporting, master-detail interface, and many others.

 */
export class DxDataGridComponent extends DxComponent {
    _watcherHelper;
    _idh;
    instance = null;
    /**
     * Specifies the shortcut key that sets focus on the UI component.
    
     */
    get accessKey() {
        return this._getOption('accessKey');
    }
    set accessKey(value) {
        this._setOption('accessKey', value);
    }
    /**
     * Specifies whether the UI component changes its visual state as a result of user interaction.
    
     */
    get activeStateEnabled() {
        return this._getOption('activeStateEnabled');
    }
    set activeStateEnabled(value) {
        this._setOption('activeStateEnabled', value);
    }
    /**
     * Specifies whether a user can reorder columns.
    
     */
    get allowColumnReordering() {
        return this._getOption('allowColumnReordering');
    }
    set allowColumnReordering(value) {
        this._setOption('allowColumnReordering', value);
    }
    /**
     * Specifies whether a user can resize columns.
    
     */
    get allowColumnResizing() {
        return this._getOption('allowColumnResizing');
    }
    set allowColumnResizing(value) {
        this._setOption('allowColumnResizing', value);
    }
    /**
     * Automatically scrolls the component to the focused row when the focusedRowKey is changed.
    
     */
    get autoNavigateToFocusedRow() {
        return this._getOption('autoNavigateToFocusedRow');
    }
    set autoNavigateToFocusedRow(value) {
        this._setOption('autoNavigateToFocusedRow', value);
    }
    /**
     * Specifies whether data should be cached.
    
     */
    get cacheEnabled() {
        return this._getOption('cacheEnabled');
    }
    set cacheEnabled(value) {
        this._setOption('cacheEnabled', value);
    }
    /**
     * Enables a hint that appears when a user hovers the mouse pointer over a cell with truncated content.
    
     */
    get cellHintEnabled() {
        return this._getOption('cellHintEnabled');
    }
    set cellHintEnabled(value) {
        this._setOption('cellHintEnabled', value);
    }
    /**
     * Specifies whether columns should adjust their widths to the content.
    
     */
    get columnAutoWidth() {
        return this._getOption('columnAutoWidth');
    }
    set columnAutoWidth(value) {
        this._setOption('columnAutoWidth', value);
    }
    /**
     * Configures the column chooser.
    
     */
    get columnChooser() {
        return this._getOption('columnChooser');
    }
    set columnChooser(value) {
        this._setOption('columnChooser', value);
    }
    /**
     * Configures column fixing.
    
     */
    get columnFixing() {
        return this._getOption('columnFixing');
    }
    set columnFixing(value) {
        this._setOption('columnFixing', value);
    }
    /**
     * Specifies whether the UI component should hide columns to adapt to the screen or container size. Ignored if allowColumnResizing is true and columnResizingMode is &apos;widget&apos;.
    
     */
    get columnHidingEnabled() {
        return this._getOption('columnHidingEnabled');
    }
    set columnHidingEnabled(value) {
        this._setOption('columnHidingEnabled', value);
    }
    /**
     * Specifies the minimum width of columns.
    
     */
    get columnMinWidth() {
        return this._getOption('columnMinWidth');
    }
    set columnMinWidth(value) {
        this._setOption('columnMinWidth', value);
    }
    /**
     * Specifies how the UI component resizes columns. Applies only if allowColumnResizing is true.
    
     */
    get columnResizingMode() {
        return this._getOption('columnResizingMode');
    }
    set columnResizingMode(value) {
        this._setOption('columnResizingMode', value);
    }
    /**
     * An array of grid columns.
    
     */
    get columns() {
        return this._getOption('columns');
    }
    set columns(value) {
        this._setOption('columns', value);
    }
    /**
     * Specifies the width for all data columns. Has a lower priority than the column.width property.
    
     */
    get columnWidth() {
        return this._getOption('columnWidth');
    }
    set columnWidth(value) {
        this._setOption('columnWidth', value);
    }
    /**
     * Customizes columns after they are created.
    
     */
    get customizeColumns() {
        return this._getOption('customizeColumns');
    }
    set customizeColumns(value) {
        this._setOption('customizeColumns', value);
    }
    /**
     * Specifies a custom template for data rows.
    
     */
    get dataRowTemplate() {
        return this._getOption('dataRowTemplate');
    }
    set dataRowTemplate(value) {
        this._setOption('dataRowTemplate', value);
    }
    /**
     * Binds the UI component to data.
    
     */
    get dataSource() {
        return this._getOption('dataSource');
    }
    set dataSource(value) {
        this._setOption('dataSource', value);
    }
    /**
     * Specifies the format in which date-time values should be sent to the server.
    
     */
    get dateSerializationFormat() {
        return this._getOption('dateSerializationFormat');
    }
    set dateSerializationFormat(value) {
        this._setOption('dateSerializationFormat', value);
    }
    /**
     * Specifies whether the UI component responds to user interaction.
    
     */
    get disabled() {
        return this._getOption('disabled');
    }
    set disabled(value) {
        this._setOption('disabled', value);
    }
    /**
     * Configures editing.
    
     */
    get editing() {
        return this._getOption('editing');
    }
    set editing(value) {
        this._setOption('editing', value);
    }
    /**
     * Specifies the global attributes to be attached to the UI component&apos;s container element.
    
     */
    get elementAttr() {
        return this._getOption('elementAttr');
    }
    set elementAttr(value) {
        this._setOption('elementAttr', value);
    }
    /**
     * Indicates whether to show the error row.
    
     */
    get errorRowEnabled() {
        return this._getOption('errorRowEnabled');
    }
    set errorRowEnabled(value) {
        this._setOption('errorRowEnabled', value);
    }
    /**
     * Configures client-side exporting.
    
     */
    get export() {
        return this._getOption('export');
    }
    set export(value) {
        this._setOption('export', value);
    }
    /**
     * Configures the integrated filter builder.
    
     */
    get filterBuilder() {
        return this._getOption('filterBuilder');
    }
    set filterBuilder(value) {
        this._setOption('filterBuilder', value);
    }
    /**
     * Configures the popup in which the integrated filter builder is shown.
    
     */
    get filterBuilderPopup() {
        return this._getOption('filterBuilderPopup');
    }
    set filterBuilderPopup(value) {
        this._setOption('filterBuilderPopup', value);
    }
    /**
     * Configures the filter panel.
    
     */
    get filterPanel() {
        return this._getOption('filterPanel');
    }
    set filterPanel(value) {
        this._setOption('filterPanel', value);
    }
    /**
     * Configures the filter row.
    
     */
    get filterRow() {
        return this._getOption('filterRow');
    }
    set filterRow(value) {
        this._setOption('filterRow', value);
    }
    /**
     * Specifies whether to synchronize the filter row, header filter, and filter builder. The synchronized filter expression is stored in the filterValue property.
    
     */
    get filterSyncEnabled() {
        return this._getOption('filterSyncEnabled');
    }
    set filterSyncEnabled(value) {
        this._setOption('filterSyncEnabled', value);
    }
    /**
     * Specifies a filter expression.
    
     */
    get filterValue() {
        return this._getOption('filterValue');
    }
    set filterValue(value) {
        this._setOption('filterValue', value);
    }
    /**
     * The index of the column that contains the focused data cell. This index is taken from the columns array.
    
     */
    get focusedColumnIndex() {
        return this._getOption('focusedColumnIndex');
    }
    set focusedColumnIndex(value) {
        this._setOption('focusedColumnIndex', value);
    }
    /**
     * Specifies whether the focused row feature is enabled.
    
     */
    get focusedRowEnabled() {
        return this._getOption('focusedRowEnabled');
    }
    set focusedRowEnabled(value) {
        this._setOption('focusedRowEnabled', value);
    }
    /**
     * Specifies or indicates the focused data row&apos;s index.
    
     */
    get focusedRowIndex() {
        return this._getOption('focusedRowIndex');
    }
    set focusedRowIndex(value) {
        this._setOption('focusedRowIndex', value);
    }
    /**
     * Specifies initially or currently focused grid row&apos;s key.
    
     */
    get focusedRowKey() {
        return this._getOption('focusedRowKey');
    }
    set focusedRowKey(value) {
        this._setOption('focusedRowKey', value);
    }
    /**
     * Configures grouping.
    
     */
    get grouping() {
        return this._getOption('grouping');
    }
    set grouping(value) {
        this._setOption('grouping', value);
    }
    /**
     * Configures the group panel.
    
     */
    get groupPanel() {
        return this._getOption('groupPanel');
    }
    set groupPanel(value) {
        this._setOption('groupPanel', value);
    }
    /**
     * Configures the header filter feature.
    
     */
    get headerFilter() {
        return this._getOption('headerFilter');
    }
    set headerFilter(value) {
        this._setOption('headerFilter', value);
    }
    /**
     * Specifies the UI component&apos;s height.
    
     */
    get height() {
        return this._getOption('height');
    }
    set height(value) {
        this._setOption('height', value);
    }
    /**
     * Specifies whether to highlight rows and cells with edited data. repaintChangesOnly should be true.
    
     */
    get highlightChanges() {
        return this._getOption('highlightChanges');
    }
    set highlightChanges(value) {
        this._setOption('highlightChanges', value);
    }
    /**
     * Specifies text for a hint that appears when a user pauses on the UI component.
    
     */
    get hint() {
        return this._getOption('hint');
    }
    set hint(value) {
        this._setOption('hint', value);
    }
    /**
     * Specifies whether the UI component changes its state when a user pauses on it.
    
     */
    get hoverStateEnabled() {
        return this._getOption('hoverStateEnabled');
    }
    set hoverStateEnabled(value) {
        this._setOption('hoverStateEnabled', value);
    }
    /**
     * Configures keyboard navigation.
    
     */
    get keyboardNavigation() {
        return this._getOption('keyboardNavigation');
    }
    set keyboardNavigation(value) {
        this._setOption('keyboardNavigation', value);
    }
    /**
     * Specifies the key property (or properties) that provide(s) key values to access data items. Each key value must be unique. This property applies only if data is a simple array.
    
     */
    get keyExpr() {
        return this._getOption('keyExpr');
    }
    set keyExpr(value) {
        this._setOption('keyExpr', value);
    }
    /**
     * Configures the load panel.
    
     */
    get loadPanel() {
        return this._getOption('loadPanel');
    }
    set loadPanel(value) {
        this._setOption('loadPanel', value);
    }
    /**
     * Allows you to build a master-detail interface in the grid.
    
     */
    get masterDetail() {
        return this._getOption('masterDetail');
    }
    set masterDetail(value) {
        this._setOption('masterDetail', value);
    }
    /**
     * Specifies a text string shown when the widget does not display any data.
    
     */
    get noDataText() {
        return this._getOption('noDataText');
    }
    set noDataText(value) {
        this._setOption('noDataText', value);
    }
    /**
     * Configures the pager.
    
     */
    get pager() {
        return this._getOption('pager');
    }
    set pager(value) {
        this._setOption('pager', value);
    }
    /**
     * Configures paging.
    
     */
    get paging() {
        return this._getOption('paging');
    }
    set paging(value) {
        this._setOption('paging', value);
    }
    /**
     * Notifies the DataGrid of the server&apos;s data processing operations.
    
     */
    get remoteOperations() {
        return this._getOption('remoteOperations');
    }
    set remoteOperations(value) {
        this._setOption('remoteOperations', value);
    }
    /**
     * Specifies whether to render the filter row, command columns, and columns with showEditorAlways set to true after other elements.
    
     */
    get renderAsync() {
        return this._getOption('renderAsync');
    }
    set renderAsync(value) {
        this._setOption('renderAsync', value);
    }
    /**
     * Specifies whether to repaint only those cells whose data changed.
    
     */
    get repaintChangesOnly() {
        return this._getOption('repaintChangesOnly');
    }
    set repaintChangesOnly(value) {
        this._setOption('repaintChangesOnly', value);
    }
    /**
     * Specifies whether rows should be shaded differently.
    
     */
    get rowAlternationEnabled() {
        return this._getOption('rowAlternationEnabled');
    }
    set rowAlternationEnabled(value) {
        this._setOption('rowAlternationEnabled', value);
    }
    /**
     * Configures row reordering using drag and drop gestures.
    
     */
    get rowDragging() {
        return this._getOption('rowDragging');
    }
    set rowDragging(value) {
        this._setOption('rowDragging', value);
    }
    /**
     * Specifies a custom template for rows.
    
     * @deprecated Use the dataRowTemplate option instead.
    
     */
    get rowTemplate() {
        return this._getOption('rowTemplate');
    }
    set rowTemplate(value) {
        this._setOption('rowTemplate', value);
    }
    /**
     * Switches the UI component to a right-to-left representation.
    
     */
    get rtlEnabled() {
        return this._getOption('rtlEnabled');
    }
    set rtlEnabled(value) {
        this._setOption('rtlEnabled', value);
    }
    /**
     * Configures scrolling.
    
     */
    get scrolling() {
        return this._getOption('scrolling');
    }
    set scrolling(value) {
        this._setOption('scrolling', value);
    }
    /**
     * Configures the search panel.
    
     */
    get searchPanel() {
        return this._getOption('searchPanel');
    }
    set searchPanel(value) {
        this._setOption('searchPanel', value);
    }
    /**
     * Allows you to select rows or determine which rows are selected.
    
     */
    get selectedRowKeys() {
        return this._getOption('selectedRowKeys');
    }
    set selectedRowKeys(value) {
        this._setOption('selectedRowKeys', value);
    }
    /**
     * Configures runtime selection.
    
     */
    get selection() {
        return this._getOption('selection');
    }
    set selection(value) {
        this._setOption('selection', value);
    }
    /**
     * Specifies filters for the rows that must be selected initially. Applies only if selection.deferred is true.
    
     */
    get selectionFilter() {
        return this._getOption('selectionFilter');
    }
    set selectionFilter(value) {
        this._setOption('selectionFilter', value);
    }
    /**
     * Specifies whether the outer borders of the UI component are visible.
    
     */
    get showBorders() {
        return this._getOption('showBorders');
    }
    set showBorders(value) {
        this._setOption('showBorders', value);
    }
    /**
     * Specifies whether column headers are visible.
    
     */
    get showColumnHeaders() {
        return this._getOption('showColumnHeaders');
    }
    set showColumnHeaders(value) {
        this._setOption('showColumnHeaders', value);
    }
    /**
     * Specifies whether vertical lines that separate one column from another are visible.
    
     */
    get showColumnLines() {
        return this._getOption('showColumnLines');
    }
    set showColumnLines(value) {
        this._setOption('showColumnLines', value);
    }
    /**
     * Specifies whether horizontal lines that separate one row from another are visible.
    
     */
    get showRowLines() {
        return this._getOption('showRowLines');
    }
    set showRowLines(value) {
        this._setOption('showRowLines', value);
    }
    /**
     * Allows you to sort groups according to the values of group summary items.
    
     */
    get sortByGroupSummaryInfo() {
        return this._getOption('sortByGroupSummaryInfo');
    }
    set sortByGroupSummaryInfo(value) {
        this._setOption('sortByGroupSummaryInfo', value);
    }
    /**
     * Configures runtime sorting.
    
     */
    get sorting() {
        return this._getOption('sorting');
    }
    set sorting(value) {
        this._setOption('sorting', value);
    }
    /**
     * Configures state storing.
    
     */
    get stateStoring() {
        return this._getOption('stateStoring');
    }
    set stateStoring(value) {
        this._setOption('stateStoring', value);
    }
    /**
     * Specifies the properties of the grid summary.
    
     */
    get summary() {
        return this._getOption('summary');
    }
    set summary(value) {
        this._setOption('summary', value);
    }
    /**
     * Specifies whether to show only relevant values in the header filter and filter row.
    
     */
    get syncLookupFilterValues() {
        return this._getOption('syncLookupFilterValues');
    }
    set syncLookupFilterValues(value) {
        this._setOption('syncLookupFilterValues', value);
    }
    /**
     * Specifies the number of the element when the Tab key is used for navigating.
    
     */
    get tabIndex() {
        return this._getOption('tabIndex');
    }
    set tabIndex(value) {
        this._setOption('tabIndex', value);
    }
    /**
     * Configures the toolbar.
    
     */
    get toolbar() {
        return this._getOption('toolbar');
    }
    set toolbar(value) {
        this._setOption('toolbar', value);
    }
    /**
     * Specifies whether to enable two-way data binding.
    
     */
    get twoWayBindingEnabled() {
        return this._getOption('twoWayBindingEnabled');
    }
    set twoWayBindingEnabled(value) {
        this._setOption('twoWayBindingEnabled', value);
    }
    /**
     * Specifies whether the UI component is visible.
    
     */
    get visible() {
        return this._getOption('visible');
    }
    set visible(value) {
        this._setOption('visible', value);
    }
    /**
     * Specifies the UI component&apos;s width.
    
     */
    get width() {
        return this._getOption('width');
    }
    set width(value) {
        this._setOption('width', value);
    }
    /**
     * Specifies whether text that does not fit into a column should be wrapped.
    
     */
    get wordWrapEnabled() {
        return this._getOption('wordWrapEnabled');
    }
    set wordWrapEnabled(value) {
        this._setOption('wordWrapEnabled', value);
    }
    /**
    
     * A function that is executed before an adaptive detail row is rendered.
    
    
     */
    onAdaptiveDetailRowPreparing;
    /**
    
     * A function that is executed when a cell is clicked or tapped. Executed before onRowClick.
    
    
     */
    onCellClick;
    /**
    
     * A function that is executed when a cell is double-clicked or double-tapped. Executed before onRowDblClick.
    
    
     */
    onCellDblClick;
    /**
    
     * A function that is executed after the pointer enters or leaves a cell.
    
    
     */
    onCellHoverChanged;
    /**
    
     * A function that is executed after a grid cell is created.
    
    
     */
    onCellPrepared;
    /**
    
     * A function that is executed when the UI component is rendered and each time the component is repainted.
    
    
     */
    onContentReady;
    /**
    
     * A function that is executed before the context menu is rendered.
    
    
     */
    onContextMenuPreparing;
    /**
    
     * A function that is executed when an error occurs in the data source.
    
    
     */
    onDataErrorOccurred;
    /**
    
     * A function that is executed before the UI component is disposed of.
    
    
     */
    onDisposing;
    /**
    
     * A function that is executed after row changes are discarded.
    
    
     */
    onEditCanceled;
    /**
    
     * A function that is executed when the edit operation is canceled, but row changes are not yet discarded.
    
    
     */
    onEditCanceling;
    /**
    
     * A function that is executed before a cell or row switches to the editing state.
    
    
     */
    onEditingStart;
    /**
    
     * A function that is executed after an editor is created. Not executed for cells with an editCellTemplate.
    
    
     */
    onEditorPrepared;
    /**
    
     * A function used to customize cell editors. Not executed for cells with an editCellTemplate.
    
    
     */
    onEditorPreparing;
    /**
    
     * A function that is executed before data is exported.
    
    
     */
    onExporting;
    /**
    
     * A function that is executed after the focused cell changes. Applies only to cells in data or group rows.
    
    
     */
    onFocusedCellChanged;
    /**
    
     * A function that is executed before the focused cell changes. Applies only to cells in data or group rows.
    
    
     */
    onFocusedCellChanging;
    /**
    
     * A function that is executed after the focused row changes. Applies only to data or group rows. focusedRowEnabled should be true.
    
    
     */
    onFocusedRowChanged;
    /**
    
     * A function that is executed before the focused row changes. Applies only to data or group rows. focusedRowEnabled should be true.
    
    
     */
    onFocusedRowChanging;
    /**
    
     * A function used in JavaScript frameworks to save the UI component instance.
    
    
     */
    onInitialized;
    /**
    
     * A function that is executed before a new row is added to the UI component.
    
    
     */
    onInitNewRow;
    /**
    
     * A function that is executed when the UI component is in focus and a key has been pressed down.
    
    
     */
    onKeyDown;
    /**
    
     * A function that is executed after a UI component property is changed.
    
    
     */
    onOptionChanged;
    /**
    
     * A function that is executed when a row is clicked or tapped.
    
    
     */
    onRowClick;
    /**
    
     * A function that is executed after a row is collapsed.
    
    
     */
    onRowCollapsed;
    /**
    
     * A function that is executed before a row is collapsed.
    
    
     */
    onRowCollapsing;
    /**
    
     * A function that is executed when a row is double-clicked or double-tapped. Executed after onCellDblClick.
    
    
     */
    onRowDblClick;
    /**
    
     * A function that is executed after a row is expanded.
    
    
     */
    onRowExpanded;
    /**
    
     * A function that is executed before a row is expanded.
    
    
     */
    onRowExpanding;
    /**
    
     * A function that is executed after a new row has been inserted into the data source.
    
    
     */
    onRowInserted;
    /**
    
     * A function that is executed before a new row is inserted into the data source.
    
    
     */
    onRowInserting;
    /**
    
     * A function that is executed after a row is created.
    
    
     */
    onRowPrepared;
    /**
    
     * A function that is executed after a row has been removed from the data source.
    
    
     */
    onRowRemoved;
    /**
    
     * A function that is executed before a row is removed from the data source.
    
    
     */
    onRowRemoving;
    /**
    
     * A function that is executed after a row has been updated in the data source.
    
    
     */
    onRowUpdated;
    /**
    
     * A function that is executed before a row is updated in the data source.
    
    
     */
    onRowUpdating;
    /**
    
     * A function that is executed after cells in a row are validated against validation rules.
    
    
     */
    onRowValidating;
    /**
    
     * A function that is executed after row changes are saved.
    
    
     */
    onSaved;
    /**
    
     * A function that is executed before pending row changes are saved.
    
    
     */
    onSaving;
    /**
    
     * A function that is executed after selecting a row or clearing its selection.
    
    
     */
    onSelectionChanged;
    /**
    
     * A function that is executed before the toolbar is created.
    
    
     */
    onToolbarPreparing;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    accessKeyChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    activeStateEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    allowColumnReorderingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    allowColumnResizingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    autoNavigateToFocusedRowChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    cacheEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    cellHintEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnAutoWidthChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnChooserChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnFixingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnHidingEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnMinWidthChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnResizingModeChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnsChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    columnWidthChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    customizeColumnsChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    dataRowTemplateChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    dataSourceChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    dateSerializationFormatChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    disabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    editingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    elementAttrChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    errorRowEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    exportChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterBuilderChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterBuilderPopupChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterPanelChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterRowChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterSyncEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    filterValueChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    focusedColumnIndexChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    focusedRowEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    focusedRowIndexChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    focusedRowKeyChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    groupingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    groupPanelChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    headerFilterChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    heightChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    highlightChangesChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    hintChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    hoverStateEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    keyboardNavigationChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    keyExprChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    loadPanelChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    masterDetailChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    noDataTextChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    pagerChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    pagingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    remoteOperationsChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    renderAsyncChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    repaintChangesOnlyChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    rowAlternationEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    rowDraggingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    rowTemplateChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    rtlEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    scrollingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    searchPanelChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    selectedRowKeysChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    selectionChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    selectionFilterChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    showBordersChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    showColumnHeadersChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    showColumnLinesChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    showRowLinesChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    sortByGroupSummaryInfoChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    sortingChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    stateStoringChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    summaryChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    syncLookupFilterValuesChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    tabIndexChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    toolbarChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    twoWayBindingEnabledChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    visibleChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    widthChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    wordWrapEnabledChange;
    get columnsChildren() {
        return this._getOption('columns');
    }
    set columnsChildren(value) {
        this._setChildren('columns', value, 'DxiDataGridColumnComponent');
    }
    get sortByGroupSummaryInfosChildren() {
        return this._getOption('sortByGroupSummaryInfo');
    }
    set sortByGroupSummaryInfosChildren(value) {
        this._setChildren('sortByGroupSummaryInfo', value, 'DxiDataGridSortByGroupSummaryInfoComponent');
    }
    get columnsLegacyChildren() {
        return this._getOption('columns');
    }
    set columnsLegacyChildren(value) {
        this._setChildren('columns', value, 'DxiColumnComponent');
    }
    get sortByGroupSummaryInfoLegacyChildren() {
        return this._getOption('sortByGroupSummaryInfo');
    }
    set sortByGroupSummaryInfoLegacyChildren(value) {
        this._setChildren('sortByGroupSummaryInfo', value, 'DxiSortByGroupSummaryInfoComponent');
    }
    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {
        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);
        this._watcherHelper = _watcherHelper;
        this._idh = _idh;
        this._createEventEmitters([
            { subscribe: 'adaptiveDetailRowPreparing', emit: 'onAdaptiveDetailRowPreparing' },
            { subscribe: 'cellClick', emit: 'onCellClick' },
            { subscribe: 'cellDblClick', emit: 'onCellDblClick' },
            { subscribe: 'cellHoverChanged', emit: 'onCellHoverChanged' },
            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },
            { subscribe: 'contentReady', emit: 'onContentReady' },
            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },
            { subscribe: 'dataErrorOccurred', emit: 'onDataErrorOccurred' },
            { subscribe: 'disposing', emit: 'onDisposing' },
            { subscribe: 'editCanceled', emit: 'onEditCanceled' },
            { subscribe: 'editCanceling', emit: 'onEditCanceling' },
            { subscribe: 'editingStart', emit: 'onEditingStart' },
            { subscribe: 'editorPrepared', emit: 'onEditorPrepared' },
            { subscribe: 'editorPreparing', emit: 'onEditorPreparing' },
            { subscribe: 'exporting', emit: 'onExporting' },
            { subscribe: 'focusedCellChanged', emit: 'onFocusedCellChanged' },
            { subscribe: 'focusedCellChanging', emit: 'onFocusedCellChanging' },
            { subscribe: 'focusedRowChanged', emit: 'onFocusedRowChanged' },
            { subscribe: 'focusedRowChanging', emit: 'onFocusedRowChanging' },
            { subscribe: 'initialized', emit: 'onInitialized' },
            { subscribe: 'initNewRow', emit: 'onInitNewRow' },
            { subscribe: 'keyDown', emit: 'onKeyDown' },
            { subscribe: 'optionChanged', emit: 'onOptionChanged' },
            { subscribe: 'rowClick', emit: 'onRowClick' },
            { subscribe: 'rowCollapsed', emit: 'onRowCollapsed' },
            { subscribe: 'rowCollapsing', emit: 'onRowCollapsing' },
            { subscribe: 'rowDblClick', emit: 'onRowDblClick' },
            { subscribe: 'rowExpanded', emit: 'onRowExpanded' },
            { subscribe: 'rowExpanding', emit: 'onRowExpanding' },
            { subscribe: 'rowInserted', emit: 'onRowInserted' },
            { subscribe: 'rowInserting', emit: 'onRowInserting' },
            { subscribe: 'rowPrepared', emit: 'onRowPrepared' },
            { subscribe: 'rowRemoved', emit: 'onRowRemoved' },
            { subscribe: 'rowRemoving', emit: 'onRowRemoving' },
            { subscribe: 'rowUpdated', emit: 'onRowUpdated' },
            { subscribe: 'rowUpdating', emit: 'onRowUpdating' },
            { subscribe: 'rowValidating', emit: 'onRowValidating' },
            { subscribe: 'saved', emit: 'onSaved' },
            { subscribe: 'saving', emit: 'onSaving' },
            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },
            { subscribe: 'toolbarPreparing', emit: 'onToolbarPreparing' },
            { emit: 'accessKeyChange' },
            { emit: 'activeStateEnabledChange' },
            { emit: 'allowColumnReorderingChange' },
            { emit: 'allowColumnResizingChange' },
            { emit: 'autoNavigateToFocusedRowChange' },
            { emit: 'cacheEnabledChange' },
            { emit: 'cellHintEnabledChange' },
            { emit: 'columnAutoWidthChange' },
            { emit: 'columnChooserChange' },
            { emit: 'columnFixingChange' },
            { emit: 'columnHidingEnabledChange' },
            { emit: 'columnMinWidthChange' },
            { emit: 'columnResizingModeChange' },
            { emit: 'columnsChange' },
            { emit: 'columnWidthChange' },
            { emit: 'customizeColumnsChange' },
            { emit: 'dataRowTemplateChange' },
            { emit: 'dataSourceChange' },
            { emit: 'dateSerializationFormatChange' },
            { emit: 'disabledChange' },
            { emit: 'editingChange' },
            { emit: 'elementAttrChange' },
            { emit: 'errorRowEnabledChange' },
            { emit: 'exportChange' },
            { emit: 'filterBuilderChange' },
            { emit: 'filterBuilderPopupChange' },
            { emit: 'filterPanelChange' },
            { emit: 'filterRowChange' },
            { emit: 'filterSyncEnabledChange' },
            { emit: 'filterValueChange' },
            { emit: 'focusedColumnIndexChange' },
            { emit: 'focusedRowEnabledChange' },
            { emit: 'focusedRowIndexChange' },
            { emit: 'focusedRowKeyChange' },
            { emit: 'groupingChange' },
            { emit: 'groupPanelChange' },
            { emit: 'headerFilterChange' },
            { emit: 'heightChange' },
            { emit: 'highlightChangesChange' },
            { emit: 'hintChange' },
            { emit: 'hoverStateEnabledChange' },
            { emit: 'keyboardNavigationChange' },
            { emit: 'keyExprChange' },
            { emit: 'loadPanelChange' },
            { emit: 'masterDetailChange' },
            { emit: 'noDataTextChange' },
            { emit: 'pagerChange' },
            { emit: 'pagingChange' },
            { emit: 'remoteOperationsChange' },
            { emit: 'renderAsyncChange' },
            { emit: 'repaintChangesOnlyChange' },
            { emit: 'rowAlternationEnabledChange' },
            { emit: 'rowDraggingChange' },
            { emit: 'rowTemplateChange' },
            { emit: 'rtlEnabledChange' },
            { emit: 'scrollingChange' },
            { emit: 'searchPanelChange' },
            { emit: 'selectedRowKeysChange' },
            { emit: 'selectionChange' },
            { emit: 'selectionFilterChange' },
            { emit: 'showBordersChange' },
            { emit: 'showColumnHeadersChange' },
            { emit: 'showColumnLinesChange' },
            { emit: 'showRowLinesChange' },
            { emit: 'sortByGroupSummaryInfoChange' },
            { emit: 'sortingChange' },
            { emit: 'stateStoringChange' },
            { emit: 'summaryChange' },
            { emit: 'syncLookupFilterValuesChange' },
            { emit: 'tabIndexChange' },
            { emit: 'toolbarChange' },
            { emit: 'twoWayBindingEnabledChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' },
            { emit: 'wordWrapEnabledChange' }
        ]);
        this._idh.setHost(this);
        optionHost.setHost(this);
    }
    _createInstance(element, options) {
        return new DxDataGrid(element, options);
    }
    ngOnDestroy() {
        this._destroyWidget();
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        this.setupChanges('columns', changes);
        this.setupChanges('dataSource', changes);
        this.setupChanges('filterValue', changes);
        this.setupChanges('keyExpr', changes);
        this.setupChanges('selectedRowKeys', changes);
        this.setupChanges('selectionFilter', changes);
        this.setupChanges('sortByGroupSummaryInfo', changes);
    }
    setupChanges(prop, changes) {
        if (!(prop in this._optionsToUpdate)) {
            this._idh.setup(prop, changes);
        }
    }
    ngDoCheck() {
        this._idh.doCheck('columns');
        this._idh.doCheck('dataSource');
        this._idh.doCheck('filterValue');
        this._idh.doCheck('keyExpr');
        this._idh.doCheck('selectedRowKeys');
        this._idh.doCheck('selectionFilter');
        this._idh.doCheck('sortByGroupSummaryInfo');
        this._watcherHelper.checkWatchers();
        super.ngDoCheck();
        super.clearChangedOptions();
    }
    _setOption(name, value) {
        let isSetup = this._idh.setupSingle(name, value);
        let isChanged = this._idh.getChanges(name, value) !== null;
        if (isSetup || isChanged) {
            super._setOption(name, value);
        }
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.DxTemplateHost }, { token: i1.WatcherHelper }, { token: i1.IterableDifferHelper }, { token: i1.NestedOptionHost }, { token: i0.TransferState }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: DxDataGridComponent, isStandalone: true, selector: "dx-data-grid", inputs: { accessKey: "accessKey", activeStateEnabled: "activeStateEnabled", allowColumnReordering: "allowColumnReordering", allowColumnResizing: "allowColumnResizing", autoNavigateToFocusedRow: "autoNavigateToFocusedRow", cacheEnabled: "cacheEnabled", cellHintEnabled: "cellHintEnabled", columnAutoWidth: "columnAutoWidth", columnChooser: "columnChooser", columnFixing: "columnFixing", columnHidingEnabled: "columnHidingEnabled", columnMinWidth: "columnMinWidth", columnResizingMode: "columnResizingMode", columns: "columns", columnWidth: "columnWidth", customizeColumns: "customizeColumns", dataRowTemplate: "dataRowTemplate", dataSource: "dataSource", dateSerializationFormat: "dateSerializationFormat", disabled: "disabled", editing: "editing", elementAttr: "elementAttr", errorRowEnabled: "errorRowEnabled", export: "export", filterBuilder: "filterBuilder", filterBuilderPopup: "filterBuilderPopup", filterPanel: "filterPanel", filterRow: "filterRow", filterSyncEnabled: "filterSyncEnabled", filterValue: "filterValue", focusedColumnIndex: "focusedColumnIndex", focusedRowEnabled: "focusedRowEnabled", focusedRowIndex: "focusedRowIndex", focusedRowKey: "focusedRowKey", grouping: "grouping", groupPanel: "groupPanel", headerFilter: "headerFilter", height: "height", highlightChanges: "highlightChanges", hint: "hint", hoverStateEnabled: "hoverStateEnabled", keyboardNavigation: "keyboardNavigation", keyExpr: "keyExpr", loadPanel: "loadPanel", masterDetail: "masterDetail", noDataText: "noDataText", pager: "pager", paging: "paging", remoteOperations: "remoteOperations", renderAsync: "renderAsync", repaintChangesOnly: "repaintChangesOnly", rowAlternationEnabled: "rowAlternationEnabled", rowDragging: "rowDragging", rowTemplate: "rowTemplate", rtlEnabled: "rtlEnabled", scrolling: "scrolling", searchPanel: "searchPanel", selectedRowKeys: "selectedRowKeys", selection: "selection", selectionFilter: "selectionFilter", showBorders: "showBorders", showColumnHeaders: "showColumnHeaders", showColumnLines: "showColumnLines", showRowLines: "showRowLines", sortByGroupSummaryInfo: "sortByGroupSummaryInfo", sorting: "sorting", stateStoring: "stateStoring", summary: "summary", syncLookupFilterValues: "syncLookupFilterValues", tabIndex: "tabIndex", toolbar: "toolbar", twoWayBindingEnabled: "twoWayBindingEnabled", visible: "visible", width: "width", wordWrapEnabled: "wordWrapEnabled" }, outputs: { onAdaptiveDetailRowPreparing: "onAdaptiveDetailRowPreparing", onCellClick: "onCellClick", onCellDblClick: "onCellDblClick", onCellHoverChanged: "onCellHoverChanged", onCellPrepared: "onCellPrepared", onContentReady: "onContentReady", onContextMenuPreparing: "onContextMenuPreparing", onDataErrorOccurred: "onDataErrorOccurred", onDisposing: "onDisposing", onEditCanceled: "onEditCanceled", onEditCanceling: "onEditCanceling", onEditingStart: "onEditingStart", onEditorPrepared: "onEditorPrepared", onEditorPreparing: "onEditorPreparing", onExporting: "onExporting", onFocusedCellChanged: "onFocusedCellChanged", onFocusedCellChanging: "onFocusedCellChanging", onFocusedRowChanged: "onFocusedRowChanged", onFocusedRowChanging: "onFocusedRowChanging", onInitialized: "onInitialized", onInitNewRow: "onInitNewRow", onKeyDown: "onKeyDown", onOptionChanged: "onOptionChanged", onRowClick: "onRowClick", onRowCollapsed: "onRowCollapsed", onRowCollapsing: "onRowCollapsing", onRowDblClick: "onRowDblClick", onRowExpanded: "onRowExpanded", onRowExpanding: "onRowExpanding", onRowInserted: "onRowInserted", onRowInserting: "onRowInserting", onRowPrepared: "onRowPrepared", onRowRemoved: "onRowRemoved", onRowRemoving: "onRowRemoving", onRowUpdated: "onRowUpdated", onRowUpdating: "onRowUpdating", onRowValidating: "onRowValidating", onSaved: "onSaved", onSaving: "onSaving", onSelectionChanged: "onSelectionChanged", onToolbarPreparing: "onToolbarPreparing", accessKeyChange: "accessKeyChange", activeStateEnabledChange: "activeStateEnabledChange", allowColumnReorderingChange: "allowColumnReorderingChange", allowColumnResizingChange: "allowColumnResizingChange", autoNavigateToFocusedRowChange: "autoNavigateToFocusedRowChange", cacheEnabledChange: "cacheEnabledChange", cellHintEnabledChange: "cellHintEnabledChange", columnAutoWidthChange: "columnAutoWidthChange", columnChooserChange: "columnChooserChange", columnFixingChange: "columnFixingChange", columnHidingEnabledChange: "columnHidingEnabledChange", columnMinWidthChange: "columnMinWidthChange", columnResizingModeChange: "columnResizingModeChange", columnsChange: "columnsChange", columnWidthChange: "columnWidthChange", customizeColumnsChange: "customizeColumnsChange", dataRowTemplateChange: "dataRowTemplateChange", dataSourceChange: "dataSourceChange", dateSerializationFormatChange: "dateSerializationFormatChange", disabledChange: "disabledChange", editingChange: "editingChange", elementAttrChange: "elementAttrChange", errorRowEnabledChange: "errorRowEnabledChange", exportChange: "exportChange", filterBuilderChange: "filterBuilderChange", filterBuilderPopupChange: "filterBuilderPopupChange", filterPanelChange: "filterPanelChange", filterRowChange: "filterRowChange", filterSyncEnabledChange: "filterSyncEnabledChange", filterValueChange: "filterValueChange", focusedColumnIndexChange: "focusedColumnIndexChange", focusedRowEnabledChange: "focusedRowEnabledChange", focusedRowIndexChange: "focusedRowIndexChange", focusedRowKeyChange: "focusedRowKeyChange", groupingChange: "groupingChange", groupPanelChange: "groupPanelChange", headerFilterChange: "headerFilterChange", heightChange: "heightChange", highlightChangesChange: "highlightChangesChange", hintChange: "hintChange", hoverStateEnabledChange: "hoverStateEnabledChange", keyboardNavigationChange: "keyboardNavigationChange", keyExprChange: "keyExprChange", loadPanelChange: "loadPanelChange", masterDetailChange: "masterDetailChange", noDataTextChange: "noDataTextChange", pagerChange: "pagerChange", pagingChange: "pagingChange", remoteOperationsChange: "remoteOperationsChange", renderAsyncChange: "renderAsyncChange", repaintChangesOnlyChange: "repaintChangesOnlyChange", rowAlternationEnabledChange: "rowAlternationEnabledChange", rowDraggingChange: "rowDraggingChange", rowTemplateChange: "rowTemplateChange", rtlEnabledChange: "rtlEnabledChange", scrollingChange: "scrollingChange", searchPanelChange: "searchPanelChange", selectedRowKeysChange: "selectedRowKeysChange", selectionChange: "selectionChange", selectionFilterChange: "selectionFilterChange", showBordersChange: "showBordersChange", showColumnHeadersChange: "showColumnHeadersChange", showColumnLinesChange: "showColumnLinesChange", showRowLinesChange: "showRowLinesChange", sortByGroupSummaryInfoChange: "sortByGroupSummaryInfoChange", sortingChange: "sortingChange", stateStoringChange: "stateStoringChange", summaryChange: "summaryChange", syncLookupFilterValuesChange: "syncLookupFilterValuesChange", tabIndexChange: "tabIndexChange", toolbarChange: "toolbarChange", twoWayBindingEnabledChange: "twoWayBindingEnabledChange", visibleChange: "visibleChange", widthChange: "widthChange", wordWrapEnabledChange: "wordWrapEnabledChange" }, host: { attributes: { "ngSkipHydration": "true" } }, providers: [
            DxTemplateHost,
            WatcherHelper,
            NestedOptionHost,
            IterableDifferHelper
        ], queries: [{ propertyName: "columnsChildren", predicate: DxiDataGridColumnComponent }, { propertyName: "sortByGroupSummaryInfosChildren", predicate: DxiDataGridSortByGroupSummaryInfoComponent }, { propertyName: "columnsLegacyChildren", predicate: DxiColumnComponent }, { propertyName: "sortByGroupSummaryInfoLegacyChildren", predicate: DxiSortByGroupSummaryInfoComponent }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '', isInline: true, dependencies: [{ kind: "ngmodule", type: DxIntegrationModule }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'dx-data-grid',
                    standalone: true,
                    template: '',
                    host: { ngSkipHydration: 'true' },
                    imports: [DxIntegrationModule],
                    providers: [
                        DxTemplateHost,
                        WatcherHelper,
                        NestedOptionHost,
                        IterableDifferHelper
                    ]
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.IterableDifferHelper }, { type: i1.NestedOptionHost }, { type: i0.TransferState }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }], propDecorators: { accessKey: [{
                type: Input
            }], activeStateEnabled: [{
                type: Input
            }], allowColumnReordering: [{
                type: Input
            }], allowColumnResizing: [{
                type: Input
            }], autoNavigateToFocusedRow: [{
                type: Input
            }], cacheEnabled: [{
                type: Input
            }], cellHintEnabled: [{
                type: Input
            }], columnAutoWidth: [{
                type: Input
            }], columnChooser: [{
                type: Input
            }], columnFixing: [{
                type: Input
            }], columnHidingEnabled: [{
                type: Input
            }], columnMinWidth: [{
                type: Input
            }], columnResizingMode: [{
                type: Input
            }], columns: [{
                type: Input
            }], columnWidth: [{
                type: Input
            }], customizeColumns: [{
                type: Input
            }], dataRowTemplate: [{
                type: Input
            }], dataSource: [{
                type: Input
            }], dateSerializationFormat: [{
                type: Input
            }], disabled: [{
                type: Input
            }], editing: [{
                type: Input
            }], elementAttr: [{
                type: Input
            }], errorRowEnabled: [{
                type: Input
            }], export: [{
                type: Input
            }], filterBuilder: [{
                type: Input
            }], filterBuilderPopup: [{
                type: Input
            }], filterPanel: [{
                type: Input
            }], filterRow: [{
                type: Input
            }], filterSyncEnabled: [{
                type: Input
            }], filterValue: [{
                type: Input
            }], focusedColumnIndex: [{
                type: Input
            }], focusedRowEnabled: [{
                type: Input
            }], focusedRowIndex: [{
                type: Input
            }], focusedRowKey: [{
                type: Input
            }], grouping: [{
                type: Input
            }], groupPanel: [{
                type: Input
            }], headerFilter: [{
                type: Input
            }], height: [{
                type: Input
            }], highlightChanges: [{
                type: Input
            }], hint: [{
                type: Input
            }], hoverStateEnabled: [{
                type: Input
            }], keyboardNavigation: [{
                type: Input
            }], keyExpr: [{
                type: Input
            }], loadPanel: [{
                type: Input
            }], masterDetail: [{
                type: Input
            }], noDataText: [{
                type: Input
            }], pager: [{
                type: Input
            }], paging: [{
                type: Input
            }], remoteOperations: [{
                type: Input
            }], renderAsync: [{
                type: Input
            }], repaintChangesOnly: [{
                type: Input
            }], rowAlternationEnabled: [{
                type: Input
            }], rowDragging: [{
                type: Input
            }], rowTemplate: [{
                type: Input
            }], rtlEnabled: [{
                type: Input
            }], scrolling: [{
                type: Input
            }], searchPanel: [{
                type: Input
            }], selectedRowKeys: [{
                type: Input
            }], selection: [{
                type: Input
            }], selectionFilter: [{
                type: Input
            }], showBorders: [{
                type: Input
            }], showColumnHeaders: [{
                type: Input
            }], showColumnLines: [{
                type: Input
            }], showRowLines: [{
                type: Input
            }], sortByGroupSummaryInfo: [{
                type: Input
            }], sorting: [{
                type: Input
            }], stateStoring: [{
                type: Input
            }], summary: [{
                type: Input
            }], syncLookupFilterValues: [{
                type: Input
            }], tabIndex: [{
                type: Input
            }], toolbar: [{
                type: Input
            }], twoWayBindingEnabled: [{
                type: Input
            }], visible: [{
                type: Input
            }], width: [{
                type: Input
            }], wordWrapEnabled: [{
                type: Input
            }], onAdaptiveDetailRowPreparing: [{
                type: Output
            }], onCellClick: [{
                type: Output
            }], onCellDblClick: [{
                type: Output
            }], onCellHoverChanged: [{
                type: Output
            }], onCellPrepared: [{
                type: Output
            }], onContentReady: [{
                type: Output
            }], onContextMenuPreparing: [{
                type: Output
            }], onDataErrorOccurred: [{
                type: Output
            }], onDisposing: [{
                type: Output
            }], onEditCanceled: [{
                type: Output
            }], onEditCanceling: [{
                type: Output
            }], onEditingStart: [{
                type: Output
            }], onEditorPrepared: [{
                type: Output
            }], onEditorPreparing: [{
                type: Output
            }], onExporting: [{
                type: Output
            }], onFocusedCellChanged: [{
                type: Output
            }], onFocusedCellChanging: [{
                type: Output
            }], onFocusedRowChanged: [{
                type: Output
            }], onFocusedRowChanging: [{
                type: Output
            }], onInitialized: [{
                type: Output
            }], onInitNewRow: [{
                type: Output
            }], onKeyDown: [{
                type: Output
            }], onOptionChanged: [{
                type: Output
            }], onRowClick: [{
                type: Output
            }], onRowCollapsed: [{
                type: Output
            }], onRowCollapsing: [{
                type: Output
            }], onRowDblClick: [{
                type: Output
            }], onRowExpanded: [{
                type: Output
            }], onRowExpanding: [{
                type: Output
            }], onRowInserted: [{
                type: Output
            }], onRowInserting: [{
                type: Output
            }], onRowPrepared: [{
                type: Output
            }], onRowRemoved: [{
                type: Output
            }], onRowRemoving: [{
                type: Output
            }], onRowUpdated: [{
                type: Output
            }], onRowUpdating: [{
                type: Output
            }], onRowValidating: [{
                type: Output
            }], onSaved: [{
                type: Output
            }], onSaving: [{
                type: Output
            }], onSelectionChanged: [{
                type: Output
            }], onToolbarPreparing: [{
                type: Output
            }], accessKeyChange: [{
                type: Output
            }], activeStateEnabledChange: [{
                type: Output
            }], allowColumnReorderingChange: [{
                type: Output
            }], allowColumnResizingChange: [{
                type: Output
            }], autoNavigateToFocusedRowChange: [{
                type: Output
            }], cacheEnabledChange: [{
                type: Output
            }], cellHintEnabledChange: [{
                type: Output
            }], columnAutoWidthChange: [{
                type: Output
            }], columnChooserChange: [{
                type: Output
            }], columnFixingChange: [{
                type: Output
            }], columnHidingEnabledChange: [{
                type: Output
            }], columnMinWidthChange: [{
                type: Output
            }], columnResizingModeChange: [{
                type: Output
            }], columnsChange: [{
                type: Output
            }], columnWidthChange: [{
                type: Output
            }], customizeColumnsChange: [{
                type: Output
            }], dataRowTemplateChange: [{
                type: Output
            }], dataSourceChange: [{
                type: Output
            }], dateSerializationFormatChange: [{
                type: Output
            }], disabledChange: [{
                type: Output
            }], editingChange: [{
                type: Output
            }], elementAttrChange: [{
                type: Output
            }], errorRowEnabledChange: [{
                type: Output
            }], exportChange: [{
                type: Output
            }], filterBuilderChange: [{
                type: Output
            }], filterBuilderPopupChange: [{
                type: Output
            }], filterPanelChange: [{
                type: Output
            }], filterRowChange: [{
                type: Output
            }], filterSyncEnabledChange: [{
                type: Output
            }], filterValueChange: [{
                type: Output
            }], focusedColumnIndexChange: [{
                type: Output
            }], focusedRowEnabledChange: [{
                type: Output
            }], focusedRowIndexChange: [{
                type: Output
            }], focusedRowKeyChange: [{
                type: Output
            }], groupingChange: [{
                type: Output
            }], groupPanelChange: [{
                type: Output
            }], headerFilterChange: [{
                type: Output
            }], heightChange: [{
                type: Output
            }], highlightChangesChange: [{
                type: Output
            }], hintChange: [{
                type: Output
            }], hoverStateEnabledChange: [{
                type: Output
            }], keyboardNavigationChange: [{
                type: Output
            }], keyExprChange: [{
                type: Output
            }], loadPanelChange: [{
                type: Output
            }], masterDetailChange: [{
                type: Output
            }], noDataTextChange: [{
                type: Output
            }], pagerChange: [{
                type: Output
            }], pagingChange: [{
                type: Output
            }], remoteOperationsChange: [{
                type: Output
            }], renderAsyncChange: [{
                type: Output
            }], repaintChangesOnlyChange: [{
                type: Output
            }], rowAlternationEnabledChange: [{
                type: Output
            }], rowDraggingChange: [{
                type: Output
            }], rowTemplateChange: [{
                type: Output
            }], rtlEnabledChange: [{
                type: Output
            }], scrollingChange: [{
                type: Output
            }], searchPanelChange: [{
                type: Output
            }], selectedRowKeysChange: [{
                type: Output
            }], selectionChange: [{
                type: Output
            }], selectionFilterChange: [{
                type: Output
            }], showBordersChange: [{
                type: Output
            }], showColumnHeadersChange: [{
                type: Output
            }], showColumnLinesChange: [{
                type: Output
            }], showRowLinesChange: [{
                type: Output
            }], sortByGroupSummaryInfoChange: [{
                type: Output
            }], sortingChange: [{
                type: Output
            }], stateStoringChange: [{
                type: Output
            }], summaryChange: [{
                type: Output
            }], syncLookupFilterValuesChange: [{
                type: Output
            }], tabIndexChange: [{
                type: Output
            }], toolbarChange: [{
                type: Output
            }], twoWayBindingEnabledChange: [{
                type: Output
            }], visibleChange: [{
                type: Output
            }], widthChange: [{
                type: Output
            }], wordWrapEnabledChange: [{
                type: Output
            }], columnsChildren: [{
                type: ContentChildren,
                args: [DxiDataGridColumnComponent]
            }], sortByGroupSummaryInfosChildren: [{
                type: ContentChildren,
                args: [DxiDataGridSortByGroupSummaryInfoComponent]
            }], columnsLegacyChildren: [{
                type: ContentChildren,
                args: [DxiColumnComponent]
            }], sortByGroupSummaryInfoLegacyChildren: [{
                type: ContentChildren,
                args: [DxiSortByGroupSummaryInfoComponent]
            }] } });
export class DxDataGridModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridModule, imports: [DxDataGridComponent, DxoColumnChooserModule,
            DxoPositionModule,
            DxoAtModule,
            DxoBoundaryOffsetModule,
            DxoCollisionModule,
            DxoMyModule,
            DxoOffsetModule,
            DxoSearchModule,
            DxoSelectionModule,
            DxoColumnFixingModule,
            DxoIconsModule,
            DxoTextsModule,
            DxiColumnModule,
            DxiButtonModule,
            DxoLookupModule,
            DxoFormatModule,
            DxoFormItemModule,
            DxoLabelModule,
            DxiValidationRuleModule,
            DxoHeaderFilterModule,
            DxoEditingModule,
            DxiChangeModule,
            DxoFormModule,
            DxoColCountByScreenModule,
            DxiItemModule,
            DxoTabPanelOptionsModule,
            DxiTabModule,
            DxoButtonOptionsModule,
            DxoPopupModule,
            DxoAnimationModule,
            DxoHideModule,
            DxoFromModule,
            DxoToModule,
            DxoShowModule,
            DxoExportModule,
            DxoFilterBuilderModule,
            DxiCustomOperationModule,
            DxiFieldModule,
            DxoFilterOperationDescriptionsModule,
            DxoGroupOperationDescriptionsModule,
            DxoFilterBuilderPopupModule,
            DxoFilterPanelModule,
            DxoFilterRowModule,
            DxoOperationDescriptionsModule,
            DxoGroupingModule,
            DxoGroupPanelModule,
            DxoKeyboardNavigationModule,
            DxoLoadPanelModule,
            DxoMasterDetailModule,
            DxoPagerModule,
            DxoPagingModule,
            DxoRemoteOperationsModule,
            DxoRowDraggingModule,
            DxoCursorOffsetModule,
            DxoScrollingModule,
            DxoSearchPanelModule,
            DxiSortByGroupSummaryInfoModule,
            DxoSortingModule,
            DxoStateStoringModule,
            DxoSummaryModule,
            DxiGroupItemModule,
            DxoValueFormatModule,
            DxiTotalItemModule,
            DxoToolbarModule,
            DxoDataGridAnimationModule,
            DxiDataGridAsyncRuleModule,
            DxoDataGridAtModule,
            DxoDataGridBoundaryOffsetModule,
            DxiDataGridButtonModule,
            DxiDataGridChangeModule,
            DxoDataGridColCountByScreenModule,
            DxoDataGridCollisionModule,
            DxiDataGridColumnModule,
            DxoDataGridColumnChooserModule,
            DxoDataGridColumnChooserSearchModule,
            DxoDataGridColumnChooserSelectionModule,
            DxoDataGridColumnFixingModule,
            DxoDataGridColumnFixingTextsModule,
            DxoDataGridColumnHeaderFilterModule,
            DxoDataGridColumnHeaderFilterSearchModule,
            DxoDataGridColumnLookupModule,
            DxiDataGridCompareRuleModule,
            DxoDataGridCursorOffsetModule,
            DxiDataGridCustomOperationModule,
            DxiDataGridCustomRuleModule,
            DxoDataGridDataGridHeaderFilterModule,
            DxoDataGridDataGridHeaderFilterSearchModule,
            DxoDataGridDataGridHeaderFilterTextsModule,
            DxoDataGridDataGridSelectionModule,
            DxoDataGridEditingModule,
            DxoDataGridEditingTextsModule,
            DxiDataGridEmailRuleModule,
            DxoDataGridExportModule,
            DxoDataGridExportTextsModule,
            DxiDataGridFieldModule,
            DxoDataGridFieldLookupModule,
            DxoDataGridFilterBuilderModule,
            DxoDataGridFilterBuilderPopupModule,
            DxoDataGridFilterOperationDescriptionsModule,
            DxoDataGridFilterPanelModule,
            DxoDataGridFilterPanelTextsModule,
            DxoDataGridFilterRowModule,
            DxoDataGridFormModule,
            DxoDataGridFormatModule,
            DxoDataGridFormItemModule,
            DxoDataGridFromModule,
            DxoDataGridGroupingModule,
            DxoDataGridGroupingTextsModule,
            DxiDataGridGroupItemModule,
            DxoDataGridGroupOperationDescriptionsModule,
            DxoDataGridGroupPanelModule,
            DxoDataGridHeaderFilterModule,
            DxoDataGridHideModule,
            DxoDataGridIconsModule,
            DxiDataGridItemModule,
            DxoDataGridKeyboardNavigationModule,
            DxoDataGridLabelModule,
            DxoDataGridLoadPanelModule,
            DxoDataGridLookupModule,
            DxoDataGridMasterDetailModule,
            DxoDataGridMyModule,
            DxiDataGridNumericRuleModule,
            DxoDataGridOffsetModule,
            DxoDataGridOperationDescriptionsModule,
            DxoDataGridPagerModule,
            DxoDataGridPagingModule,
            DxiDataGridPatternRuleModule,
            DxoDataGridPopupModule,
            DxoDataGridPositionModule,
            DxiDataGridRangeRuleModule,
            DxoDataGridRemoteOperationsModule,
            DxiDataGridRequiredRuleModule,
            DxoDataGridRowDraggingModule,
            DxoDataGridScrollingModule,
            DxoDataGridSearchModule,
            DxoDataGridSearchPanelModule,
            DxoDataGridSelectionModule,
            DxoDataGridShowModule,
            DxiDataGridSortByGroupSummaryInfoModule,
            DxoDataGridSortingModule,
            DxoDataGridStateStoringModule,
            DxiDataGridStringLengthRuleModule,
            DxoDataGridSummaryModule,
            DxoDataGridSummaryTextsModule,
            DxoDataGridTextsModule,
            DxoDataGridToModule,
            DxoDataGridToolbarModule,
            DxiDataGridToolbarItemModule,
            DxiDataGridTotalItemModule,
            DxiDataGridValidationRuleModule,
            DxoDataGridValueFormatModule,
            DxIntegrationModule,
            DxTemplateModule], exports: [DxDataGridComponent, DxoColumnChooserModule,
            DxoPositionModule,
            DxoAtModule,
            DxoBoundaryOffsetModule,
            DxoCollisionModule,
            DxoMyModule,
            DxoOffsetModule,
            DxoSearchModule,
            DxoSelectionModule,
            DxoColumnFixingModule,
            DxoIconsModule,
            DxoTextsModule,
            DxiColumnModule,
            DxiButtonModule,
            DxoLookupModule,
            DxoFormatModule,
            DxoFormItemModule,
            DxoLabelModule,
            DxiValidationRuleModule,
            DxoHeaderFilterModule,
            DxoEditingModule,
            DxiChangeModule,
            DxoFormModule,
            DxoColCountByScreenModule,
            DxiItemModule,
            DxoTabPanelOptionsModule,
            DxiTabModule,
            DxoButtonOptionsModule,
            DxoPopupModule,
            DxoAnimationModule,
            DxoHideModule,
            DxoFromModule,
            DxoToModule,
            DxoShowModule,
            DxoExportModule,
            DxoFilterBuilderModule,
            DxiCustomOperationModule,
            DxiFieldModule,
            DxoFilterOperationDescriptionsModule,
            DxoGroupOperationDescriptionsModule,
            DxoFilterBuilderPopupModule,
            DxoFilterPanelModule,
            DxoFilterRowModule,
            DxoOperationDescriptionsModule,
            DxoGroupingModule,
            DxoGroupPanelModule,
            DxoKeyboardNavigationModule,
            DxoLoadPanelModule,
            DxoMasterDetailModule,
            DxoPagerModule,
            DxoPagingModule,
            DxoRemoteOperationsModule,
            DxoRowDraggingModule,
            DxoCursorOffsetModule,
            DxoScrollingModule,
            DxoSearchPanelModule,
            DxiSortByGroupSummaryInfoModule,
            DxoSortingModule,
            DxoStateStoringModule,
            DxoSummaryModule,
            DxiGroupItemModule,
            DxoValueFormatModule,
            DxiTotalItemModule,
            DxoToolbarModule,
            DxoDataGridAnimationModule,
            DxiDataGridAsyncRuleModule,
            DxoDataGridAtModule,
            DxoDataGridBoundaryOffsetModule,
            DxiDataGridButtonModule,
            DxiDataGridChangeModule,
            DxoDataGridColCountByScreenModule,
            DxoDataGridCollisionModule,
            DxiDataGridColumnModule,
            DxoDataGridColumnChooserModule,
            DxoDataGridColumnChooserSearchModule,
            DxoDataGridColumnChooserSelectionModule,
            DxoDataGridColumnFixingModule,
            DxoDataGridColumnFixingTextsModule,
            DxoDataGridColumnHeaderFilterModule,
            DxoDataGridColumnHeaderFilterSearchModule,
            DxoDataGridColumnLookupModule,
            DxiDataGridCompareRuleModule,
            DxoDataGridCursorOffsetModule,
            DxiDataGridCustomOperationModule,
            DxiDataGridCustomRuleModule,
            DxoDataGridDataGridHeaderFilterModule,
            DxoDataGridDataGridHeaderFilterSearchModule,
            DxoDataGridDataGridHeaderFilterTextsModule,
            DxoDataGridDataGridSelectionModule,
            DxoDataGridEditingModule,
            DxoDataGridEditingTextsModule,
            DxiDataGridEmailRuleModule,
            DxoDataGridExportModule,
            DxoDataGridExportTextsModule,
            DxiDataGridFieldModule,
            DxoDataGridFieldLookupModule,
            DxoDataGridFilterBuilderModule,
            DxoDataGridFilterBuilderPopupModule,
            DxoDataGridFilterOperationDescriptionsModule,
            DxoDataGridFilterPanelModule,
            DxoDataGridFilterPanelTextsModule,
            DxoDataGridFilterRowModule,
            DxoDataGridFormModule,
            DxoDataGridFormatModule,
            DxoDataGridFormItemModule,
            DxoDataGridFromModule,
            DxoDataGridGroupingModule,
            DxoDataGridGroupingTextsModule,
            DxiDataGridGroupItemModule,
            DxoDataGridGroupOperationDescriptionsModule,
            DxoDataGridGroupPanelModule,
            DxoDataGridHeaderFilterModule,
            DxoDataGridHideModule,
            DxoDataGridIconsModule,
            DxiDataGridItemModule,
            DxoDataGridKeyboardNavigationModule,
            DxoDataGridLabelModule,
            DxoDataGridLoadPanelModule,
            DxoDataGridLookupModule,
            DxoDataGridMasterDetailModule,
            DxoDataGridMyModule,
            DxiDataGridNumericRuleModule,
            DxoDataGridOffsetModule,
            DxoDataGridOperationDescriptionsModule,
            DxoDataGridPagerModule,
            DxoDataGridPagingModule,
            DxiDataGridPatternRuleModule,
            DxoDataGridPopupModule,
            DxoDataGridPositionModule,
            DxiDataGridRangeRuleModule,
            DxoDataGridRemoteOperationsModule,
            DxiDataGridRequiredRuleModule,
            DxoDataGridRowDraggingModule,
            DxoDataGridScrollingModule,
            DxoDataGridSearchModule,
            DxoDataGridSearchPanelModule,
            DxoDataGridSelectionModule,
            DxoDataGridShowModule,
            DxiDataGridSortByGroupSummaryInfoModule,
            DxoDataGridSortingModule,
            DxoDataGridStateStoringModule,
            DxiDataGridStringLengthRuleModule,
            DxoDataGridSummaryModule,
            DxoDataGridSummaryTextsModule,
            DxoDataGridTextsModule,
            DxoDataGridToModule,
            DxoDataGridToolbarModule,
            DxiDataGridToolbarItemModule,
            DxiDataGridTotalItemModule,
            DxiDataGridValidationRuleModule,
            DxoDataGridValueFormatModule,
            DxTemplateModule] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridModule, imports: [DxDataGridComponent,
            DxoColumnChooserModule,
            DxoPositionModule,
            DxoAtModule,
            DxoBoundaryOffsetModule,
            DxoCollisionModule,
            DxoMyModule,
            DxoOffsetModule,
            DxoSearchModule,
            DxoSelectionModule,
            DxoColumnFixingModule,
            DxoIconsModule,
            DxoTextsModule,
            DxiColumnModule,
            DxiButtonModule,
            DxoLookupModule,
            DxoFormatModule,
            DxoFormItemModule,
            DxoLabelModule,
            DxiValidationRuleModule,
            DxoHeaderFilterModule,
            DxoEditingModule,
            DxiChangeModule,
            DxoFormModule,
            DxoColCountByScreenModule,
            DxiItemModule,
            DxoTabPanelOptionsModule,
            DxiTabModule,
            DxoButtonOptionsModule,
            DxoPopupModule,
            DxoAnimationModule,
            DxoHideModule,
            DxoFromModule,
            DxoToModule,
            DxoShowModule,
            DxoExportModule,
            DxoFilterBuilderModule,
            DxiCustomOperationModule,
            DxiFieldModule,
            DxoFilterOperationDescriptionsModule,
            DxoGroupOperationDescriptionsModule,
            DxoFilterBuilderPopupModule,
            DxoFilterPanelModule,
            DxoFilterRowModule,
            DxoOperationDescriptionsModule,
            DxoGroupingModule,
            DxoGroupPanelModule,
            DxoKeyboardNavigationModule,
            DxoLoadPanelModule,
            DxoMasterDetailModule,
            DxoPagerModule,
            DxoPagingModule,
            DxoRemoteOperationsModule,
            DxoRowDraggingModule,
            DxoCursorOffsetModule,
            DxoScrollingModule,
            DxoSearchPanelModule,
            DxiSortByGroupSummaryInfoModule,
            DxoSortingModule,
            DxoStateStoringModule,
            DxoSummaryModule,
            DxiGroupItemModule,
            DxoValueFormatModule,
            DxiTotalItemModule,
            DxoToolbarModule,
            DxoDataGridAnimationModule,
            DxiDataGridAsyncRuleModule,
            DxoDataGridAtModule,
            DxoDataGridBoundaryOffsetModule,
            DxiDataGridButtonModule,
            DxiDataGridChangeModule,
            DxoDataGridColCountByScreenModule,
            DxoDataGridCollisionModule,
            DxiDataGridColumnModule,
            DxoDataGridColumnChooserModule,
            DxoDataGridColumnChooserSearchModule,
            DxoDataGridColumnChooserSelectionModule,
            DxoDataGridColumnFixingModule,
            DxoDataGridColumnFixingTextsModule,
            DxoDataGridColumnHeaderFilterModule,
            DxoDataGridColumnHeaderFilterSearchModule,
            DxoDataGridColumnLookupModule,
            DxiDataGridCompareRuleModule,
            DxoDataGridCursorOffsetModule,
            DxiDataGridCustomOperationModule,
            DxiDataGridCustomRuleModule,
            DxoDataGridDataGridHeaderFilterModule,
            DxoDataGridDataGridHeaderFilterSearchModule,
            DxoDataGridDataGridHeaderFilterTextsModule,
            DxoDataGridDataGridSelectionModule,
            DxoDataGridEditingModule,
            DxoDataGridEditingTextsModule,
            DxiDataGridEmailRuleModule,
            DxoDataGridExportModule,
            DxoDataGridExportTextsModule,
            DxiDataGridFieldModule,
            DxoDataGridFieldLookupModule,
            DxoDataGridFilterBuilderModule,
            DxoDataGridFilterBuilderPopupModule,
            DxoDataGridFilterOperationDescriptionsModule,
            DxoDataGridFilterPanelModule,
            DxoDataGridFilterPanelTextsModule,
            DxoDataGridFilterRowModule,
            DxoDataGridFormModule,
            DxoDataGridFormatModule,
            DxoDataGridFormItemModule,
            DxoDataGridFromModule,
            DxoDataGridGroupingModule,
            DxoDataGridGroupingTextsModule,
            DxiDataGridGroupItemModule,
            DxoDataGridGroupOperationDescriptionsModule,
            DxoDataGridGroupPanelModule,
            DxoDataGridHeaderFilterModule,
            DxoDataGridHideModule,
            DxoDataGridIconsModule,
            DxiDataGridItemModule,
            DxoDataGridKeyboardNavigationModule,
            DxoDataGridLabelModule,
            DxoDataGridLoadPanelModule,
            DxoDataGridLookupModule,
            DxoDataGridMasterDetailModule,
            DxoDataGridMyModule,
            DxiDataGridNumericRuleModule,
            DxoDataGridOffsetModule,
            DxoDataGridOperationDescriptionsModule,
            DxoDataGridPagerModule,
            DxoDataGridPagingModule,
            DxiDataGridPatternRuleModule,
            DxoDataGridPopupModule,
            DxoDataGridPositionModule,
            DxiDataGridRangeRuleModule,
            DxoDataGridRemoteOperationsModule,
            DxiDataGridRequiredRuleModule,
            DxoDataGridRowDraggingModule,
            DxoDataGridScrollingModule,
            DxoDataGridSearchModule,
            DxoDataGridSearchPanelModule,
            DxoDataGridSelectionModule,
            DxoDataGridShowModule,
            DxiDataGridSortByGroupSummaryInfoModule,
            DxoDataGridSortingModule,
            DxoDataGridStateStoringModule,
            DxiDataGridStringLengthRuleModule,
            DxoDataGridSummaryModule,
            DxoDataGridSummaryTextsModule,
            DxoDataGridTextsModule,
            DxoDataGridToModule,
            DxoDataGridToolbarModule,
            DxiDataGridToolbarItemModule,
            DxiDataGridTotalItemModule,
            DxiDataGridValidationRuleModule,
            DxoDataGridValueFormatModule,
            DxIntegrationModule,
            DxTemplateModule, DxoColumnChooserModule,
            DxoPositionModule,
            DxoAtModule,
            DxoBoundaryOffsetModule,
            DxoCollisionModule,
            DxoMyModule,
            DxoOffsetModule,
            DxoSearchModule,
            DxoSelectionModule,
            DxoColumnFixingModule,
            DxoIconsModule,
            DxoTextsModule,
            DxiColumnModule,
            DxiButtonModule,
            DxoLookupModule,
            DxoFormatModule,
            DxoFormItemModule,
            DxoLabelModule,
            DxiValidationRuleModule,
            DxoHeaderFilterModule,
            DxoEditingModule,
            DxiChangeModule,
            DxoFormModule,
            DxoColCountByScreenModule,
            DxiItemModule,
            DxoTabPanelOptionsModule,
            DxiTabModule,
            DxoButtonOptionsModule,
            DxoPopupModule,
            DxoAnimationModule,
            DxoHideModule,
            DxoFromModule,
            DxoToModule,
            DxoShowModule,
            DxoExportModule,
            DxoFilterBuilderModule,
            DxiCustomOperationModule,
            DxiFieldModule,
            DxoFilterOperationDescriptionsModule,
            DxoGroupOperationDescriptionsModule,
            DxoFilterBuilderPopupModule,
            DxoFilterPanelModule,
            DxoFilterRowModule,
            DxoOperationDescriptionsModule,
            DxoGroupingModule,
            DxoGroupPanelModule,
            DxoKeyboardNavigationModule,
            DxoLoadPanelModule,
            DxoMasterDetailModule,
            DxoPagerModule,
            DxoPagingModule,
            DxoRemoteOperationsModule,
            DxoRowDraggingModule,
            DxoCursorOffsetModule,
            DxoScrollingModule,
            DxoSearchPanelModule,
            DxiSortByGroupSummaryInfoModule,
            DxoSortingModule,
            DxoStateStoringModule,
            DxoSummaryModule,
            DxiGroupItemModule,
            DxoValueFormatModule,
            DxiTotalItemModule,
            DxoToolbarModule,
            DxoDataGridAnimationModule,
            DxiDataGridAsyncRuleModule,
            DxoDataGridAtModule,
            DxoDataGridBoundaryOffsetModule,
            DxiDataGridButtonModule,
            DxiDataGridChangeModule,
            DxoDataGridColCountByScreenModule,
            DxoDataGridCollisionModule,
            DxiDataGridColumnModule,
            DxoDataGridColumnChooserModule,
            DxoDataGridColumnChooserSearchModule,
            DxoDataGridColumnChooserSelectionModule,
            DxoDataGridColumnFixingModule,
            DxoDataGridColumnFixingTextsModule,
            DxoDataGridColumnHeaderFilterModule,
            DxoDataGridColumnHeaderFilterSearchModule,
            DxoDataGridColumnLookupModule,
            DxiDataGridCompareRuleModule,
            DxoDataGridCursorOffsetModule,
            DxiDataGridCustomOperationModule,
            DxiDataGridCustomRuleModule,
            DxoDataGridDataGridHeaderFilterModule,
            DxoDataGridDataGridHeaderFilterSearchModule,
            DxoDataGridDataGridHeaderFilterTextsModule,
            DxoDataGridDataGridSelectionModule,
            DxoDataGridEditingModule,
            DxoDataGridEditingTextsModule,
            DxiDataGridEmailRuleModule,
            DxoDataGridExportModule,
            DxoDataGridExportTextsModule,
            DxiDataGridFieldModule,
            DxoDataGridFieldLookupModule,
            DxoDataGridFilterBuilderModule,
            DxoDataGridFilterBuilderPopupModule,
            DxoDataGridFilterOperationDescriptionsModule,
            DxoDataGridFilterPanelModule,
            DxoDataGridFilterPanelTextsModule,
            DxoDataGridFilterRowModule,
            DxoDataGridFormModule,
            DxoDataGridFormatModule,
            DxoDataGridFormItemModule,
            DxoDataGridFromModule,
            DxoDataGridGroupingModule,
            DxoDataGridGroupingTextsModule,
            DxiDataGridGroupItemModule,
            DxoDataGridGroupOperationDescriptionsModule,
            DxoDataGridGroupPanelModule,
            DxoDataGridHeaderFilterModule,
            DxoDataGridHideModule,
            DxoDataGridIconsModule,
            DxiDataGridItemModule,
            DxoDataGridKeyboardNavigationModule,
            DxoDataGridLabelModule,
            DxoDataGridLoadPanelModule,
            DxoDataGridLookupModule,
            DxoDataGridMasterDetailModule,
            DxoDataGridMyModule,
            DxiDataGridNumericRuleModule,
            DxoDataGridOffsetModule,
            DxoDataGridOperationDescriptionsModule,
            DxoDataGridPagerModule,
            DxoDataGridPagingModule,
            DxiDataGridPatternRuleModule,
            DxoDataGridPopupModule,
            DxoDataGridPositionModule,
            DxiDataGridRangeRuleModule,
            DxoDataGridRemoteOperationsModule,
            DxiDataGridRequiredRuleModule,
            DxoDataGridRowDraggingModule,
            DxoDataGridScrollingModule,
            DxoDataGridSearchModule,
            DxoDataGridSearchPanelModule,
            DxoDataGridSelectionModule,
            DxoDataGridShowModule,
            DxiDataGridSortByGroupSummaryInfoModule,
            DxoDataGridSortingModule,
            DxoDataGridStateStoringModule,
            DxiDataGridStringLengthRuleModule,
            DxoDataGridSummaryModule,
            DxoDataGridSummaryTextsModule,
            DxoDataGridTextsModule,
            DxoDataGridToModule,
            DxoDataGridToolbarModule,
            DxiDataGridToolbarItemModule,
            DxiDataGridTotalItemModule,
            DxiDataGridValidationRuleModule,
            DxoDataGridValueFormatModule,
            DxTemplateModule] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxDataGridModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        DxDataGridComponent,
                        DxoColumnChooserModule,
                        DxoPositionModule,
                        DxoAtModule,
                        DxoBoundaryOffsetModule,
                        DxoCollisionModule,
                        DxoMyModule,
                        DxoOffsetModule,
                        DxoSearchModule,
                        DxoSelectionModule,
                        DxoColumnFixingModule,
                        DxoIconsModule,
                        DxoTextsModule,
                        DxiColumnModule,
                        DxiButtonModule,
                        DxoLookupModule,
                        DxoFormatModule,
                        DxoFormItemModule,
                        DxoLabelModule,
                        DxiValidationRuleModule,
                        DxoHeaderFilterModule,
                        DxoEditingModule,
                        DxiChangeModule,
                        DxoFormModule,
                        DxoColCountByScreenModule,
                        DxiItemModule,
                        DxoTabPanelOptionsModule,
                        DxiTabModule,
                        DxoButtonOptionsModule,
                        DxoPopupModule,
                        DxoAnimationModule,
                        DxoHideModule,
                        DxoFromModule,
                        DxoToModule,
                        DxoShowModule,
                        DxoExportModule,
                        DxoFilterBuilderModule,
                        DxiCustomOperationModule,
                        DxiFieldModule,
                        DxoFilterOperationDescriptionsModule,
                        DxoGroupOperationDescriptionsModule,
                        DxoFilterBuilderPopupModule,
                        DxoFilterPanelModule,
                        DxoFilterRowModule,
                        DxoOperationDescriptionsModule,
                        DxoGroupingModule,
                        DxoGroupPanelModule,
                        DxoKeyboardNavigationModule,
                        DxoLoadPanelModule,
                        DxoMasterDetailModule,
                        DxoPagerModule,
                        DxoPagingModule,
                        DxoRemoteOperationsModule,
                        DxoRowDraggingModule,
                        DxoCursorOffsetModule,
                        DxoScrollingModule,
                        DxoSearchPanelModule,
                        DxiSortByGroupSummaryInfoModule,
                        DxoSortingModule,
                        DxoStateStoringModule,
                        DxoSummaryModule,
                        DxiGroupItemModule,
                        DxoValueFormatModule,
                        DxiTotalItemModule,
                        DxoToolbarModule,
                        DxoDataGridAnimationModule,
                        DxiDataGridAsyncRuleModule,
                        DxoDataGridAtModule,
                        DxoDataGridBoundaryOffsetModule,
                        DxiDataGridButtonModule,
                        DxiDataGridChangeModule,
                        DxoDataGridColCountByScreenModule,
                        DxoDataGridCollisionModule,
                        DxiDataGridColumnModule,
                        DxoDataGridColumnChooserModule,
                        DxoDataGridColumnChooserSearchModule,
                        DxoDataGridColumnChooserSelectionModule,
                        DxoDataGridColumnFixingModule,
                        DxoDataGridColumnFixingTextsModule,
                        DxoDataGridColumnHeaderFilterModule,
                        DxoDataGridColumnHeaderFilterSearchModule,
                        DxoDataGridColumnLookupModule,
                        DxiDataGridCompareRuleModule,
                        DxoDataGridCursorOffsetModule,
                        DxiDataGridCustomOperationModule,
                        DxiDataGridCustomRuleModule,
                        DxoDataGridDataGridHeaderFilterModule,
                        DxoDataGridDataGridHeaderFilterSearchModule,
                        DxoDataGridDataGridHeaderFilterTextsModule,
                        DxoDataGridDataGridSelectionModule,
                        DxoDataGridEditingModule,
                        DxoDataGridEditingTextsModule,
                        DxiDataGridEmailRuleModule,
                        DxoDataGridExportModule,
                        DxoDataGridExportTextsModule,
                        DxiDataGridFieldModule,
                        DxoDataGridFieldLookupModule,
                        DxoDataGridFilterBuilderModule,
                        DxoDataGridFilterBuilderPopupModule,
                        DxoDataGridFilterOperationDescriptionsModule,
                        DxoDataGridFilterPanelModule,
                        DxoDataGridFilterPanelTextsModule,
                        DxoDataGridFilterRowModule,
                        DxoDataGridFormModule,
                        DxoDataGridFormatModule,
                        DxoDataGridFormItemModule,
                        DxoDataGridFromModule,
                        DxoDataGridGroupingModule,
                        DxoDataGridGroupingTextsModule,
                        DxiDataGridGroupItemModule,
                        DxoDataGridGroupOperationDescriptionsModule,
                        DxoDataGridGroupPanelModule,
                        DxoDataGridHeaderFilterModule,
                        DxoDataGridHideModule,
                        DxoDataGridIconsModule,
                        DxiDataGridItemModule,
                        DxoDataGridKeyboardNavigationModule,
                        DxoDataGridLabelModule,
                        DxoDataGridLoadPanelModule,
                        DxoDataGridLookupModule,
                        DxoDataGridMasterDetailModule,
                        DxoDataGridMyModule,
                        DxiDataGridNumericRuleModule,
                        DxoDataGridOffsetModule,
                        DxoDataGridOperationDescriptionsModule,
                        DxoDataGridPagerModule,
                        DxoDataGridPagingModule,
                        DxiDataGridPatternRuleModule,
                        DxoDataGridPopupModule,
                        DxoDataGridPositionModule,
                        DxiDataGridRangeRuleModule,
                        DxoDataGridRemoteOperationsModule,
                        DxiDataGridRequiredRuleModule,
                        DxoDataGridRowDraggingModule,
                        DxoDataGridScrollingModule,
                        DxoDataGridSearchModule,
                        DxoDataGridSearchPanelModule,
                        DxoDataGridSelectionModule,
                        DxoDataGridShowModule,
                        DxiDataGridSortByGroupSummaryInfoModule,
                        DxoDataGridSortingModule,
                        DxoDataGridStateStoringModule,
                        DxiDataGridStringLengthRuleModule,
                        DxoDataGridSummaryModule,
                        DxoDataGridSummaryTextsModule,
                        DxoDataGridTextsModule,
                        DxoDataGridToModule,
                        DxoDataGridToolbarModule,
                        DxiDataGridToolbarItemModule,
                        DxiDataGridTotalItemModule,
                        DxiDataGridValidationRuleModule,
                        DxoDataGridValueFormatModule,
                        DxIntegrationModule,
                        DxTemplateModule
                    ],
                    exports: [
                        DxDataGridComponent,
                        DxoColumnChooserModule,
                        DxoPositionModule,
                        DxoAtModule,
                        DxoBoundaryOffsetModule,
                        DxoCollisionModule,
                        DxoMyModule,
                        DxoOffsetModule,
                        DxoSearchModule,
                        DxoSelectionModule,
                        DxoColumnFixingModule,
                        DxoIconsModule,
                        DxoTextsModule,
                        DxiColumnModule,
                        DxiButtonModule,
                        DxoLookupModule,
                        DxoFormatModule,
                        DxoFormItemModule,
                        DxoLabelModule,
                        DxiValidationRuleModule,
                        DxoHeaderFilterModule,
                        DxoEditingModule,
                        DxiChangeModule,
                        DxoFormModule,
                        DxoColCountByScreenModule,
                        DxiItemModule,
                        DxoTabPanelOptionsModule,
                        DxiTabModule,
                        DxoButtonOptionsModule,
                        DxoPopupModule,
                        DxoAnimationModule,
                        DxoHideModule,
                        DxoFromModule,
                        DxoToModule,
                        DxoShowModule,
                        DxoExportModule,
                        DxoFilterBuilderModule,
                        DxiCustomOperationModule,
                        DxiFieldModule,
                        DxoFilterOperationDescriptionsModule,
                        DxoGroupOperationDescriptionsModule,
                        DxoFilterBuilderPopupModule,
                        DxoFilterPanelModule,
                        DxoFilterRowModule,
                        DxoOperationDescriptionsModule,
                        DxoGroupingModule,
                        DxoGroupPanelModule,
                        DxoKeyboardNavigationModule,
                        DxoLoadPanelModule,
                        DxoMasterDetailModule,
                        DxoPagerModule,
                        DxoPagingModule,
                        DxoRemoteOperationsModule,
                        DxoRowDraggingModule,
                        DxoCursorOffsetModule,
                        DxoScrollingModule,
                        DxoSearchPanelModule,
                        DxiSortByGroupSummaryInfoModule,
                        DxoSortingModule,
                        DxoStateStoringModule,
                        DxoSummaryModule,
                        DxiGroupItemModule,
                        DxoValueFormatModule,
                        DxiTotalItemModule,
                        DxoToolbarModule,
                        DxoDataGridAnimationModule,
                        DxiDataGridAsyncRuleModule,
                        DxoDataGridAtModule,
                        DxoDataGridBoundaryOffsetModule,
                        DxiDataGridButtonModule,
                        DxiDataGridChangeModule,
                        DxoDataGridColCountByScreenModule,
                        DxoDataGridCollisionModule,
                        DxiDataGridColumnModule,
                        DxoDataGridColumnChooserModule,
                        DxoDataGridColumnChooserSearchModule,
                        DxoDataGridColumnChooserSelectionModule,
                        DxoDataGridColumnFixingModule,
                        DxoDataGridColumnFixingTextsModule,
                        DxoDataGridColumnHeaderFilterModule,
                        DxoDataGridColumnHeaderFilterSearchModule,
                        DxoDataGridColumnLookupModule,
                        DxiDataGridCompareRuleModule,
                        DxoDataGridCursorOffsetModule,
                        DxiDataGridCustomOperationModule,
                        DxiDataGridCustomRuleModule,
                        DxoDataGridDataGridHeaderFilterModule,
                        DxoDataGridDataGridHeaderFilterSearchModule,
                        DxoDataGridDataGridHeaderFilterTextsModule,
                        DxoDataGridDataGridSelectionModule,
                        DxoDataGridEditingModule,
                        DxoDataGridEditingTextsModule,
                        DxiDataGridEmailRuleModule,
                        DxoDataGridExportModule,
                        DxoDataGridExportTextsModule,
                        DxiDataGridFieldModule,
                        DxoDataGridFieldLookupModule,
                        DxoDataGridFilterBuilderModule,
                        DxoDataGridFilterBuilderPopupModule,
                        DxoDataGridFilterOperationDescriptionsModule,
                        DxoDataGridFilterPanelModule,
                        DxoDataGridFilterPanelTextsModule,
                        DxoDataGridFilterRowModule,
                        DxoDataGridFormModule,
                        DxoDataGridFormatModule,
                        DxoDataGridFormItemModule,
                        DxoDataGridFromModule,
                        DxoDataGridGroupingModule,
                        DxoDataGridGroupingTextsModule,
                        DxiDataGridGroupItemModule,
                        DxoDataGridGroupOperationDescriptionsModule,
                        DxoDataGridGroupPanelModule,
                        DxoDataGridHeaderFilterModule,
                        DxoDataGridHideModule,
                        DxoDataGridIconsModule,
                        DxiDataGridItemModule,
                        DxoDataGridKeyboardNavigationModule,
                        DxoDataGridLabelModule,
                        DxoDataGridLoadPanelModule,
                        DxoDataGridLookupModule,
                        DxoDataGridMasterDetailModule,
                        DxoDataGridMyModule,
                        DxiDataGridNumericRuleModule,
                        DxoDataGridOffsetModule,
                        DxoDataGridOperationDescriptionsModule,
                        DxoDataGridPagerModule,
                        DxoDataGridPagingModule,
                        DxiDataGridPatternRuleModule,
                        DxoDataGridPopupModule,
                        DxoDataGridPositionModule,
                        DxiDataGridRangeRuleModule,
                        DxoDataGridRemoteOperationsModule,
                        DxiDataGridRequiredRuleModule,
                        DxoDataGridRowDraggingModule,
                        DxoDataGridScrollingModule,
                        DxoDataGridSearchModule,
                        DxoDataGridSearchPanelModule,
                        DxoDataGridSelectionModule,
                        DxoDataGridShowModule,
                        DxiDataGridSortByGroupSummaryInfoModule,
                        DxoDataGridSortingModule,
                        DxoDataGridStateStoringModule,
                        DxiDataGridStringLengthRuleModule,
                        DxoDataGridSummaryModule,
                        DxoDataGridSummaryTextsModule,
                        DxoDataGridTextsModule,
                        DxoDataGridToModule,
                        DxoDataGridToolbarModule,
                        DxiDataGridToolbarItemModule,
                        DxiDataGridTotalItemModule,
                        DxiDataGridValidationRuleModule,
                        DxoDataGridValueFormatModule,
                        DxTemplateModule
                    ]
                }]
        }] });
export * from 'devextreme-angular/ui/data-grid/nested';
//# sourceMappingURL=data:application/json;base64,