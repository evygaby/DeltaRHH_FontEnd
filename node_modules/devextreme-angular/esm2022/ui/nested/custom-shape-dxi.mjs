/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, ElementRef, Renderer2, Inject, SkipSelf, Input, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { DxIntegrationModule, NestedOptionHost, extractTemplate, DxTemplateHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiConnectionPointComponent } from './connection-point-dxi';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxiCustomShapeComponent extends CollectionNestedOption {
    renderer;
    document;
    element;
    get allowEditImage() {
        return this._getOption('allowEditImage');
    }
    set allowEditImage(value) {
        this._setOption('allowEditImage', value);
    }
    get allowEditText() {
        return this._getOption('allowEditText');
    }
    set allowEditText(value) {
        this._setOption('allowEditText', value);
    }
    get allowResize() {
        return this._getOption('allowResize');
    }
    set allowResize(value) {
        this._setOption('allowResize', value);
    }
    get backgroundImageHeight() {
        return this._getOption('backgroundImageHeight');
    }
    set backgroundImageHeight(value) {
        this._setOption('backgroundImageHeight', value);
    }
    get backgroundImageLeft() {
        return this._getOption('backgroundImageLeft');
    }
    set backgroundImageLeft(value) {
        this._setOption('backgroundImageLeft', value);
    }
    get backgroundImageToolboxUrl() {
        return this._getOption('backgroundImageToolboxUrl');
    }
    set backgroundImageToolboxUrl(value) {
        this._setOption('backgroundImageToolboxUrl', value);
    }
    get backgroundImageTop() {
        return this._getOption('backgroundImageTop');
    }
    set backgroundImageTop(value) {
        this._setOption('backgroundImageTop', value);
    }
    get backgroundImageUrl() {
        return this._getOption('backgroundImageUrl');
    }
    set backgroundImageUrl(value) {
        this._setOption('backgroundImageUrl', value);
    }
    get backgroundImageWidth() {
        return this._getOption('backgroundImageWidth');
    }
    set backgroundImageWidth(value) {
        this._setOption('backgroundImageWidth', value);
    }
    get baseType() {
        return this._getOption('baseType');
    }
    set baseType(value) {
        this._setOption('baseType', value);
    }
    get category() {
        return this._getOption('category');
    }
    set category(value) {
        this._setOption('category', value);
    }
    get connectionPoints() {
        return this._getOption('connectionPoints');
    }
    set connectionPoints(value) {
        this._setOption('connectionPoints', value);
    }
    get defaultHeight() {
        return this._getOption('defaultHeight');
    }
    set defaultHeight(value) {
        this._setOption('defaultHeight', value);
    }
    get defaultImageUrl() {
        return this._getOption('defaultImageUrl');
    }
    set defaultImageUrl(value) {
        this._setOption('defaultImageUrl', value);
    }
    get defaultText() {
        return this._getOption('defaultText');
    }
    set defaultText(value) {
        this._setOption('defaultText', value);
    }
    get defaultWidth() {
        return this._getOption('defaultWidth');
    }
    set defaultWidth(value) {
        this._setOption('defaultWidth', value);
    }
    get imageHeight() {
        return this._getOption('imageHeight');
    }
    set imageHeight(value) {
        this._setOption('imageHeight', value);
    }
    get imageLeft() {
        return this._getOption('imageLeft');
    }
    set imageLeft(value) {
        this._setOption('imageLeft', value);
    }
    get imageTop() {
        return this._getOption('imageTop');
    }
    set imageTop(value) {
        this._setOption('imageTop', value);
    }
    get imageWidth() {
        return this._getOption('imageWidth');
    }
    set imageWidth(value) {
        this._setOption('imageWidth', value);
    }
    get keepRatioOnAutoSize() {
        return this._getOption('keepRatioOnAutoSize');
    }
    set keepRatioOnAutoSize(value) {
        this._setOption('keepRatioOnAutoSize', value);
    }
    get maxHeight() {
        return this._getOption('maxHeight');
    }
    set maxHeight(value) {
        this._setOption('maxHeight', value);
    }
    get maxWidth() {
        return this._getOption('maxWidth');
    }
    set maxWidth(value) {
        this._setOption('maxWidth', value);
    }
    get minHeight() {
        return this._getOption('minHeight');
    }
    set minHeight(value) {
        this._setOption('minHeight', value);
    }
    get minWidth() {
        return this._getOption('minWidth');
    }
    set minWidth(value) {
        this._setOption('minWidth', value);
    }
    get template() {
        return this._getOption('template');
    }
    set template(value) {
        this._setOption('template', value);
    }
    get templateHeight() {
        return this._getOption('templateHeight');
    }
    set templateHeight(value) {
        this._setOption('templateHeight', value);
    }
    get templateLeft() {
        return this._getOption('templateLeft');
    }
    set templateLeft(value) {
        this._setOption('templateLeft', value);
    }
    get templateTop() {
        return this._getOption('templateTop');
    }
    set templateTop(value) {
        this._setOption('templateTop', value);
    }
    get templateWidth() {
        return this._getOption('templateWidth');
    }
    set templateWidth(value) {
        this._setOption('templateWidth', value);
    }
    get textHeight() {
        return this._getOption('textHeight');
    }
    set textHeight(value) {
        this._setOption('textHeight', value);
    }
    get textLeft() {
        return this._getOption('textLeft');
    }
    set textLeft(value) {
        this._setOption('textLeft', value);
    }
    get textTop() {
        return this._getOption('textTop');
    }
    set textTop(value) {
        this._setOption('textTop', value);
    }
    get textWidth() {
        return this._getOption('textWidth');
    }
    set textWidth(value) {
        this._setOption('textWidth', value);
    }
    get title() {
        return this._getOption('title');
    }
    set title(value) {
        this._setOption('title', value);
    }
    get toolboxTemplate() {
        return this._getOption('toolboxTemplate');
    }
    set toolboxTemplate(value) {
        this._setOption('toolboxTemplate', value);
    }
    get toolboxWidthToHeightRatio() {
        return this._getOption('toolboxWidthToHeightRatio');
    }
    set toolboxWidthToHeightRatio(value) {
        this._setOption('toolboxWidthToHeightRatio', value);
    }
    get type() {
        return this._getOption('type');
    }
    set type(value) {
        this._setOption('type', value);
    }
    get _optionPath() {
        return 'customShapes';
    }
    get connectionPointsChildren() {
        return this._getOption('connectionPoints');
    }
    set connectionPointsChildren(value) {
        this.setChildren('connectionPoints', value);
    }
    constructor(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        super();
        this.renderer = renderer;
        this.document = document;
        this.element = element;
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
        templateHost.setHost(this);
    }
    setTemplate(template) {
        this.template = template;
    }
    ngAfterViewInit() {
        extractTemplate(this, this.element, this.renderer, this.document);
    }
    ngOnDestroy() {
        this._deleteRemovedOptions(this._fullOptionPath());
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeComponent, deps: [{ token: i1.NestedOptionHost, host: true, skipSelf: true }, { token: i1.NestedOptionHost, host: true }, { token: i0.Renderer2 }, { token: DOCUMENT }, { token: i1.DxTemplateHost, host: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: DxiCustomShapeComponent, isStandalone: true, selector: "dxi-custom-shape", inputs: { allowEditImage: "allowEditImage", allowEditText: "allowEditText", allowResize: "allowResize", backgroundImageHeight: "backgroundImageHeight", backgroundImageLeft: "backgroundImageLeft", backgroundImageToolboxUrl: "backgroundImageToolboxUrl", backgroundImageTop: "backgroundImageTop", backgroundImageUrl: "backgroundImageUrl", backgroundImageWidth: "backgroundImageWidth", baseType: "baseType", category: "category", connectionPoints: "connectionPoints", defaultHeight: "defaultHeight", defaultImageUrl: "defaultImageUrl", defaultText: "defaultText", defaultWidth: "defaultWidth", imageHeight: "imageHeight", imageLeft: "imageLeft", imageTop: "imageTop", imageWidth: "imageWidth", keepRatioOnAutoSize: "keepRatioOnAutoSize", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", template: "template", templateHeight: "templateHeight", templateLeft: "templateLeft", templateTop: "templateTop", templateWidth: "templateWidth", textHeight: "textHeight", textLeft: "textLeft", textTop: "textTop", textWidth: "textWidth", title: "title", toolboxTemplate: "toolboxTemplate", toolboxWidthToHeightRatio: "toolboxWidthToHeightRatio", type: "type" }, providers: [NestedOptionHost, DxTemplateHost], queries: [{ propertyName: "connectionPointsChildren", predicate: i0.forwardRef(() => DxiConnectionPointComponent) }], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host{display:block}\n"], dependencies: [{ kind: "ngmodule", type: DxIntegrationModule }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dxi-custom-shape', standalone: true, template: '<ng-content></ng-content>', imports: [DxIntegrationModule], providers: [NestedOptionHost, DxTemplateHost], styles: [":host{display:block}\n"] }]
        }], ctorParameters: () => [{ type: i1.NestedOptionHost, decorators: [{
                    type: SkipSelf
                }, {
                    type: Host
                }] }, { type: i1.NestedOptionHost, decorators: [{
                    type: Host
                }] }, { type: i0.Renderer2 }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i1.DxTemplateHost, decorators: [{
                    type: Host
                }] }, { type: i0.ElementRef }], propDecorators: { allowEditImage: [{
                type: Input
            }], allowEditText: [{
                type: Input
            }], allowResize: [{
                type: Input
            }], backgroundImageHeight: [{
                type: Input
            }], backgroundImageLeft: [{
                type: Input
            }], backgroundImageToolboxUrl: [{
                type: Input
            }], backgroundImageTop: [{
                type: Input
            }], backgroundImageUrl: [{
                type: Input
            }], backgroundImageWidth: [{
                type: Input
            }], baseType: [{
                type: Input
            }], category: [{
                type: Input
            }], connectionPoints: [{
                type: Input
            }], defaultHeight: [{
                type: Input
            }], defaultImageUrl: [{
                type: Input
            }], defaultText: [{
                type: Input
            }], defaultWidth: [{
                type: Input
            }], imageHeight: [{
                type: Input
            }], imageLeft: [{
                type: Input
            }], imageTop: [{
                type: Input
            }], imageWidth: [{
                type: Input
            }], keepRatioOnAutoSize: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], template: [{
                type: Input
            }], templateHeight: [{
                type: Input
            }], templateLeft: [{
                type: Input
            }], templateTop: [{
                type: Input
            }], templateWidth: [{
                type: Input
            }], textHeight: [{
                type: Input
            }], textLeft: [{
                type: Input
            }], textTop: [{
                type: Input
            }], textWidth: [{
                type: Input
            }], title: [{
                type: Input
            }], toolboxTemplate: [{
                type: Input
            }], toolboxWidthToHeightRatio: [{
                type: Input
            }], type: [{
                type: Input
            }], connectionPointsChildren: [{
                type: ContentChildren,
                args: [forwardRef(() => DxiConnectionPointComponent)]
            }] } });
export class DxiCustomShapeModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeModule, imports: [DxiCustomShapeComponent], exports: [DxiCustomShapeComponent] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeModule, imports: [DxiCustomShapeComponent] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxiCustomShapeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        DxiCustomShapeComponent
                    ],
                    exports: [
                        DxiCustomShapeComponent
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,