/*!
 * devextreme-angular
 * Version: 25.1.3
 * Build date: Wed Jun 25 2025
 *
 * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input, Output, EventEmitter, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { DxIntegrationModule, NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiChangeComponent } from './change-dxi';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoEditingComponent extends NestedOption {
    get allowDeleting() {
        return this._getOption('allowDeleting');
    }
    set allowDeleting(value) {
        this._setOption('allowDeleting', value);
    }
    get allowUpdating() {
        return this._getOption('allowUpdating');
    }
    set allowUpdating(value) {
        this._setOption('allowUpdating', value);
    }
    get allowAdding() {
        return this._getOption('allowAdding');
    }
    set allowAdding(value) {
        this._setOption('allowAdding', value);
    }
    get changes() {
        return this._getOption('changes');
    }
    set changes(value) {
        this._setOption('changes', value);
    }
    get confirmDelete() {
        return this._getOption('confirmDelete');
    }
    set confirmDelete(value) {
        this._setOption('confirmDelete', value);
    }
    get editColumnName() {
        return this._getOption('editColumnName');
    }
    set editColumnName(value) {
        this._setOption('editColumnName', value);
    }
    get editRowKey() {
        return this._getOption('editRowKey');
    }
    set editRowKey(value) {
        this._setOption('editRowKey', value);
    }
    get form() {
        return this._getOption('form');
    }
    set form(value) {
        this._setOption('form', value);
    }
    get mode() {
        return this._getOption('mode');
    }
    set mode(value) {
        this._setOption('mode', value);
    }
    get newRowPosition() {
        return this._getOption('newRowPosition');
    }
    set newRowPosition(value) {
        this._setOption('newRowPosition', value);
    }
    get popup() {
        return this._getOption('popup');
    }
    set popup(value) {
        this._setOption('popup', value);
    }
    get refreshMode() {
        return this._getOption('refreshMode');
    }
    set refreshMode(value) {
        this._setOption('refreshMode', value);
    }
    get selectTextOnEditStart() {
        return this._getOption('selectTextOnEditStart');
    }
    set selectTextOnEditStart(value) {
        this._setOption('selectTextOnEditStart', value);
    }
    get startEditAction() {
        return this._getOption('startEditAction');
    }
    set startEditAction(value) {
        this._setOption('startEditAction', value);
    }
    get texts() {
        return this._getOption('texts');
    }
    set texts(value) {
        this._setOption('texts', value);
    }
    get useIcons() {
        return this._getOption('useIcons');
    }
    set useIcons(value) {
        this._setOption('useIcons', value);
    }
    get allowAddShape() {
        return this._getOption('allowAddShape');
    }
    set allowAddShape(value) {
        this._setOption('allowAddShape', value);
    }
    get allowChangeConnection() {
        return this._getOption('allowChangeConnection');
    }
    set allowChangeConnection(value) {
        this._setOption('allowChangeConnection', value);
    }
    get allowChangeConnectorPoints() {
        return this._getOption('allowChangeConnectorPoints');
    }
    set allowChangeConnectorPoints(value) {
        this._setOption('allowChangeConnectorPoints', value);
    }
    get allowChangeConnectorText() {
        return this._getOption('allowChangeConnectorText');
    }
    set allowChangeConnectorText(value) {
        this._setOption('allowChangeConnectorText', value);
    }
    get allowChangeShapeText() {
        return this._getOption('allowChangeShapeText');
    }
    set allowChangeShapeText(value) {
        this._setOption('allowChangeShapeText', value);
    }
    get allowDeleteConnector() {
        return this._getOption('allowDeleteConnector');
    }
    set allowDeleteConnector(value) {
        this._setOption('allowDeleteConnector', value);
    }
    get allowDeleteShape() {
        return this._getOption('allowDeleteShape');
    }
    set allowDeleteShape(value) {
        this._setOption('allowDeleteShape', value);
    }
    get allowMoveShape() {
        return this._getOption('allowMoveShape');
    }
    set allowMoveShape(value) {
        this._setOption('allowMoveShape', value);
    }
    get allowResizeShape() {
        return this._getOption('allowResizeShape');
    }
    set allowResizeShape(value) {
        this._setOption('allowResizeShape', value);
    }
    get allowDependencyAdding() {
        return this._getOption('allowDependencyAdding');
    }
    set allowDependencyAdding(value) {
        this._setOption('allowDependencyAdding', value);
    }
    get allowDependencyDeleting() {
        return this._getOption('allowDependencyDeleting');
    }
    set allowDependencyDeleting(value) {
        this._setOption('allowDependencyDeleting', value);
    }
    get allowResourceAdding() {
        return this._getOption('allowResourceAdding');
    }
    set allowResourceAdding(value) {
        this._setOption('allowResourceAdding', value);
    }
    get allowResourceDeleting() {
        return this._getOption('allowResourceDeleting');
    }
    set allowResourceDeleting(value) {
        this._setOption('allowResourceDeleting', value);
    }
    get allowResourceUpdating() {
        return this._getOption('allowResourceUpdating');
    }
    set allowResourceUpdating(value) {
        this._setOption('allowResourceUpdating', value);
    }
    get allowTaskAdding() {
        return this._getOption('allowTaskAdding');
    }
    set allowTaskAdding(value) {
        this._setOption('allowTaskAdding', value);
    }
    get allowTaskDeleting() {
        return this._getOption('allowTaskDeleting');
    }
    set allowTaskDeleting(value) {
        this._setOption('allowTaskDeleting', value);
    }
    get allowTaskResourceUpdating() {
        return this._getOption('allowTaskResourceUpdating');
    }
    set allowTaskResourceUpdating(value) {
        this._setOption('allowTaskResourceUpdating', value);
    }
    get allowTaskUpdating() {
        return this._getOption('allowTaskUpdating');
    }
    set allowTaskUpdating(value) {
        this._setOption('allowTaskUpdating', value);
    }
    get enabled() {
        return this._getOption('enabled');
    }
    set enabled(value) {
        this._setOption('enabled', value);
    }
    get allowDragging() {
        return this._getOption('allowDragging');
    }
    set allowDragging(value) {
        this._setOption('allowDragging', value);
    }
    get allowResizing() {
        return this._getOption('allowResizing');
    }
    set allowResizing(value) {
        this._setOption('allowResizing', value);
    }
    get allowTimeZoneEditing() {
        return this._getOption('allowTimeZoneEditing');
    }
    set allowTimeZoneEditing(value) {
        this._setOption('allowTimeZoneEditing', value);
    }
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    changesChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    editColumnNameChange;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    editRowKeyChange;
    get _optionPath() {
        return 'editing';
    }
    get changesChildren() {
        return this._getOption('changes');
    }
    set changesChildren(value) {
        this.setChildren('changes', value);
    }
    constructor(parentOptionHost, optionHost) {
        super();
        this._createEventEmitters([
            { emit: 'changesChange' },
            { emit: 'editColumnNameChange' },
            { emit: 'editRowKeyChange' }
        ]);
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingComponent, deps: [{ token: i1.NestedOptionHost, host: true, skipSelf: true }, { token: i1.NestedOptionHost, host: true }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: DxoEditingComponent, isStandalone: true, selector: "dxo-editing", inputs: { allowDeleting: "allowDeleting", allowUpdating: "allowUpdating", allowAdding: "allowAdding", changes: "changes", confirmDelete: "confirmDelete", editColumnName: "editColumnName", editRowKey: "editRowKey", form: "form", mode: "mode", newRowPosition: "newRowPosition", popup: "popup", refreshMode: "refreshMode", selectTextOnEditStart: "selectTextOnEditStart", startEditAction: "startEditAction", texts: "texts", useIcons: "useIcons", allowAddShape: "allowAddShape", allowChangeConnection: "allowChangeConnection", allowChangeConnectorPoints: "allowChangeConnectorPoints", allowChangeConnectorText: "allowChangeConnectorText", allowChangeShapeText: "allowChangeShapeText", allowDeleteConnector: "allowDeleteConnector", allowDeleteShape: "allowDeleteShape", allowMoveShape: "allowMoveShape", allowResizeShape: "allowResizeShape", allowDependencyAdding: "allowDependencyAdding", allowDependencyDeleting: "allowDependencyDeleting", allowResourceAdding: "allowResourceAdding", allowResourceDeleting: "allowResourceDeleting", allowResourceUpdating: "allowResourceUpdating", allowTaskAdding: "allowTaskAdding", allowTaskDeleting: "allowTaskDeleting", allowTaskResourceUpdating: "allowTaskResourceUpdating", allowTaskUpdating: "allowTaskUpdating", enabled: "enabled", allowDragging: "allowDragging", allowResizing: "allowResizing", allowTimeZoneEditing: "allowTimeZoneEditing" }, outputs: { changesChange: "changesChange", editColumnNameChange: "editColumnNameChange", editRowKeyChange: "editRowKeyChange" }, providers: [NestedOptionHost], queries: [{ propertyName: "changesChildren", predicate: i0.forwardRef(() => DxiChangeComponent) }], usesInheritance: true, ngImport: i0, template: '', isInline: true, styles: [""], dependencies: [{ kind: "ngmodule", type: DxIntegrationModule }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dxo-editing', standalone: true, template: '', imports: [DxIntegrationModule], providers: [NestedOptionHost] }]
        }], ctorParameters: () => [{ type: i1.NestedOptionHost, decorators: [{
                    type: SkipSelf
                }, {
                    type: Host
                }] }, { type: i1.NestedOptionHost, decorators: [{
                    type: Host
                }] }], propDecorators: { allowDeleting: [{
                type: Input
            }], allowUpdating: [{
                type: Input
            }], allowAdding: [{
                type: Input
            }], changes: [{
                type: Input
            }], confirmDelete: [{
                type: Input
            }], editColumnName: [{
                type: Input
            }], editRowKey: [{
                type: Input
            }], form: [{
                type: Input
            }], mode: [{
                type: Input
            }], newRowPosition: [{
                type: Input
            }], popup: [{
                type: Input
            }], refreshMode: [{
                type: Input
            }], selectTextOnEditStart: [{
                type: Input
            }], startEditAction: [{
                type: Input
            }], texts: [{
                type: Input
            }], useIcons: [{
                type: Input
            }], allowAddShape: [{
                type: Input
            }], allowChangeConnection: [{
                type: Input
            }], allowChangeConnectorPoints: [{
                type: Input
            }], allowChangeConnectorText: [{
                type: Input
            }], allowChangeShapeText: [{
                type: Input
            }], allowDeleteConnector: [{
                type: Input
            }], allowDeleteShape: [{
                type: Input
            }], allowMoveShape: [{
                type: Input
            }], allowResizeShape: [{
                type: Input
            }], allowDependencyAdding: [{
                type: Input
            }], allowDependencyDeleting: [{
                type: Input
            }], allowResourceAdding: [{
                type: Input
            }], allowResourceDeleting: [{
                type: Input
            }], allowResourceUpdating: [{
                type: Input
            }], allowTaskAdding: [{
                type: Input
            }], allowTaskDeleting: [{
                type: Input
            }], allowTaskResourceUpdating: [{
                type: Input
            }], allowTaskUpdating: [{
                type: Input
            }], enabled: [{
                type: Input
            }], allowDragging: [{
                type: Input
            }], allowResizing: [{
                type: Input
            }], allowTimeZoneEditing: [{
                type: Input
            }], changesChange: [{
                type: Output
            }], editColumnNameChange: [{
                type: Output
            }], editRowKeyChange: [{
                type: Output
            }], changesChildren: [{
                type: ContentChildren,
                args: [forwardRef(() => DxiChangeComponent)]
            }] } });
export class DxoEditingModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingModule, imports: [DxoEditingComponent], exports: [DxoEditingComponent] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingModule, imports: [DxoEditingComponent] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoEditingModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        DxoEditingComponent
                    ],
                    exports: [
                        DxoEditingComponent
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,