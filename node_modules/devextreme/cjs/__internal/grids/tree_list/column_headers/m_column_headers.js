/**
 * DevExtreme (cjs/__internal/grids/tree_list/column_headers/m_column_headers.js)
 * Version: 23.1.13
 * Build date: Mon Oct 28 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
var _m_column_headers = require("../../../grids/grid_core/column_headers/m_column_headers");
var _m_core = _interopRequireDefault(require("../m_core"));

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    }
}

function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass)
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        o.__proto__ = p;
        return o
    };
    return _setPrototypeOf(o, p)
}
var TreeListColumnHeadersView = function(_columnHeadersModule$) {
    _inheritsLoose(TreeListColumnHeadersView, _columnHeadersModule$);

    function TreeListColumnHeadersView() {
        return _columnHeadersModule$.apply(this, arguments) || this
    }
    var _proto = TreeListColumnHeadersView.prototype;
    _proto.setTableRole = function($tableElement) {
        this.setAria("role", "treegrid", $tableElement)
    };
    return TreeListColumnHeadersView
}(_m_column_headers.columnHeadersModule.views.columnHeadersView);
_m_core.default.registerModule("columnHeaders", {
    defaultOptions: _m_column_headers.columnHeadersModule.defaultOptions,
    views: {
        columnHeadersView: TreeListColumnHeadersView
    }
});
